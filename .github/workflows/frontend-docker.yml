name: full-stack docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}/fullstack

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          load: true
          tags: harmony-fullstack:test

      - name: Smoke test container
        run: |
          set -euo pipefail
          docker run -d \
            --name harmony-fullstack-smoke \
            -p 18080:8000 \
            -e FEATURE_RUN_MIGRATIONS=off \
            -e DATABASE_URL=sqlite:///./harmony.db \
            harmony-fullstack:test
          cleanup() {
            docker rm -f harmony-fullstack-smoke >/dev/null 2>&1 || true
          }
          trap cleanup EXIT
          for attempt in $(seq 1 30); do
            if curl -fsS http://127.0.0.1:18080/health >/tmp/health.json; then
              break
            fi
            sleep 2
          done
          curl -fsS http://127.0.0.1:18080/health >/tmp/health.json
          python - <<'PY'
import json
from pathlib import Path
import sys

payload = json.loads(Path("/tmp/health.json").read_text())
if payload.get("status") != "ok":
    sys.exit("Health check did not return status=ok")
PY
          docker exec harmony-fullstack-smoke test -d /app/frontend_dist
          docker exec harmony-fullstack-smoke test -f /app/frontend_dist/index.html

      - name: Compute tags
        id: meta
        run: |
          short_sha="${GITHUB_SHA::7}"
          echo "short_sha=${short_sha}" >>"${GITHUB_OUTPUT}"

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:latest
            ${{ env.REGISTRY_IMAGE }}:sha-${{ steps.meta.outputs.short_sha }}
