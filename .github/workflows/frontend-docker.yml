name: frontend docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}/frontend

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend
          load: true
          tags: harmony-frontend:test

      - name: Smoke test container
        run: |
          set -euo pipefail
          docker run -d \
            --name harmony-frontend-smoke \
            -p 18081:80 \
            -e PUBLIC_BACKEND_URL="http://api:8000" \
            -e PUBLIC_SENTRY_DSN="https://sentry.example/1" \
            -e PUBLIC_FEATURE_FLAGS='{"beta":true}' \
            harmony-frontend:test
          cleanup() {
            docker rm -f harmony-frontend-smoke >/dev/null 2>&1 || true
          }
          trap cleanup EXIT
          for attempt in $(seq 1 20); do
            if curl -fsS http://127.0.0.1:18081/ >/tmp/frontend-index.html; then
              break
            fi
            sleep 2
          done
          curl -fsS http://127.0.0.1:18081/ >/tmp/frontend-index.html
          curl -fsS http://127.0.0.1:18081/env.runtime.js >/tmp/env.runtime.js
          grep -q "http://api:8000" /tmp/env.runtime.js
          grep -q '"beta":true' /tmp/env.runtime.js
          curl -fsSI http://127.0.0.1:18081/index.html | grep -i 'cache-control: no-store'
          asset_path=$(docker exec harmony-frontend-smoke sh -c 'if [ -d /config/www/assets ]; then find /config/www/assets -maxdepth 1 -type f -name "*.js" | head -n1; fi')
          if [ -n "$asset_path" ]; then
            asset_name=$(basename "$asset_path")
            curl -fsSI "http://127.0.0.1:18081/assets/${asset_name}" | grep -i 'cache-control: public, max-age=31536000, immutable'
          fi

      - name: Compute tags
        id: meta
        run: |
          short_sha="${GITHUB_SHA::7}"
          echo "short_sha=${short_sha}" >>"${GITHUB_OUTPUT}"

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:latest
            ${{ env.REGISTRY_IMAGE }}:sha-${{ steps.meta.outputs.short_sha }}
