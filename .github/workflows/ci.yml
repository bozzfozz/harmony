name: CI

on:
  push:
    branches:
      - main
      - feature/**
      - fix/**
      - chore/**
      - ci/**
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install black==24.8.0 ruff==0.12.11 isort==5.13.2 mypy
      - name: Wiring audit
        run: python scripts/audit_wiring.py
      - name: Ruff (lint + import order)
        run: ruff check .
      - name: Black
        run: black --check .
      - name: Isort
        run: isort --check-only .
      - name: Mypy
        run: mypy app
      - name: Pytest
        run: pytest -q
      - name: pip-audit (advisories only)
        run: pip-audit -r requirements.txt || true
      - name: Radon
        run: radon cc -s -a app
      - name: Vulture
        run: vulture app tests --exclude .venv

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Test
        working-directory: frontend
        run: npm test --silent
      - name: Typecheck
        working-directory: frontend
        run: npm run typecheck
      - name: Build
        working-directory: frontend
        run: npm run build

  openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Validate OpenAPI snapshot
        run: |
          python - <<'PY'
          import json
          from pathlib import Path

          from app.main import app

          snapshot_path = Path('tests/snapshots/openapi.json')
          current_schema = app.openapi()
          snapshot_schema = json.loads(snapshot_path.read_text())
          if current_schema != snapshot_schema:
              raise SystemExit('OpenAPI schema drift detected. Update tests/snapshots/openapi.json')
          PY

  security-bandit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-bandit-${{ hashFiles('requirements-dev.txt', '.bandit') }}
      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit==1.7.9
      - name: Security scan (Bandit)
        run: |
          mkdir -p reports/analysis/_evidence
          set -o pipefail
          bandit -c .bandit -r app | tee reports/analysis/_evidence/bandit_app.txt
