name: docker-image

on:
  workflow_dispatch:
    inputs:
      smoke_enabled:
        description: "Run local smoke test before publishing"
        required: false
        default: "false"

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-image-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  APP_PORT: "8080"
  SMOKE_PATH: "/live"
  SMOKE_ENABLED: ${{ github.event.inputs.smoke_enabled || 'false' }}
  BUILD_DATE: ${{ github.run_started_at }}

jobs:
  build-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Guard against requirements*.txt files
        run: |
          set -euo pipefail
          if ls requirements*.txt 1>/dev/null 2>&1; then
            echo "requirements*.txt files detected; please rely on uv instead." >&2
            exit 1
          fi

      - name: Supply guard
        run: make supply-guard

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.7.0"

      - name: Verify uv lockfile
        run: uv lock --check

      - name: Install dependencies
        run: |
          uv sync --frozen --group dev --group test --project .

      - name: Run release checks (make release-check)
        env:
          SLSKD_API_KEY: smoke-key
        run: |
          uv run --no-sync --group dev --group test make release-check
          git diff --exit-code

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short,prefix=sha-,priority=400
            type=ref,event=branch,priority=300
            type=semver,pattern={{version}},priority=200
            type=semver,pattern={{major}}.{{minor}},priority=190
            type=raw,value=edge,enable=${{ startsWith(github.ref, 'refs/heads/main') }},priority=100
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }},priority=90
          labels: |
            org.opencontainers.image.title=Harmony
            org.opencontainers.image.description=Harmony FastAPI backend
            org.opencontainers.image.url=https://github.com/${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=https://github.com/${{ env.IMAGE_NAME }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.licenses=MIT

      - name: Local smoke build (amd64, not pushed)
        if: env.SMOKE_ENABLED == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.lsio
          platforms: linux/amd64
          load: true
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ci-smoke-${{ github.run_id }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || 'edge' }}

      - name: Legacy port guard
        run: uv run --no-sync python scripts/guard_no_legacy_port.py

      - name: Smoke test container
        if: env.SMOKE_ENABLED == 'true'
        run: |
          set -euo pipefail
          trap 'docker logs hsmoke || true' ERR
          trap 'docker stop hsmoke >/dev/null 2>&1 || true' EXIT

          image="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ci-smoke-${{ github.run_id }}"
          docker run -d --rm -p ${APP_PORT}:${APP_PORT} --name hsmoke "$image"

          tries=0
          max_tries=30
          smoke_url="http://127.0.0.1:${APP_PORT}${SMOKE_PATH}"

          until curl -fsS "$smoke_url" >/dev/null; do
            tries=$((tries + 1))
            if [ "$tries" -ge "$max_tries" ]; then
              echo "Smoke check failed after ${tries} attempts against ${smoke_url}" >&2
              exit 1
            fi
            sleep 2
          done

          curl -fsS "$smoke_url" >/dev/null
          docker logs hsmoke --tail=100 || true

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.lsio
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || 'edge' }}
