name: docker-image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_PLATFORMS: linux/amd64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx (docker-container)
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Read app version from source
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          VERSION="$(python - <<'PY'
          import sys, pathlib
          sys.path.insert(0, str(pathlib.Path('.').resolve()))
          from app.version import __version__
          print(__version__)
          PY
          )"
          # Docker-Tag-Sanitizing: “+” u.ä. sind für Tags ungültig
          SANITIZED="$VERSION"
          SANITIZED="${SANITIZED//+/-}"
          SANITIZED="${SANITIZED// /}"
          SANITIZED="${SANITIZED//\//-}"
          echo "version_raw=$VERSION" >> "$GITHUB_OUTPUT"
          echo "version_tag=$SANITIZED" >> "$GITHUB_OUTPUT"

      - name: Docker metadata (labels only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Keine automatischen Tags; wir setzen Tags manuell als “raw”.
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ steps.ver.outputs.version_tag }}
          # Labels generieren (Quelle, Revision, etc.)
          labels: |
            org.opencontainers.image.title=harmony
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.ver.outputs.version_raw }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          platforms: ${{ env.DOCKER_PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
