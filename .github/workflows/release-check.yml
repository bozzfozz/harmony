name: release-check

on:
  push:
    branches:
      - 'release/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'release/**'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: release-check-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'

jobs:
  gate:
    name: release-check
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            requirements-test.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt -r requirements-test.txt
          pip install -e .

      - name: Run make release-check
        env:
          SLSKD_API_KEY: release-check-ci
          HARMONY_API_KEYS: ui-smoke-key
        run: |
          set -euo pipefail
          mkdir -p reports/release-check
          make release-check |& tee reports/release-check/release-check.log
          git diff --exit-code

      - name: Upload release-check logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-check-logs
          path: reports/release-check/
          if-no-files-found: warn
