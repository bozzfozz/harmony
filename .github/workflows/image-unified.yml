name: unified docker image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/bozzfozz/harmony

jobs:
  build:
    name: Build, test and publish image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-
            type=semver,pattern=v{{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build image for smoke tests
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          load: true
          platforms: linux/amd64
          tags: harmony:ci-test
          cache-from: type=gha,scope=unified-image
          cache-to: type=gha,scope=unified-image,mode=max

      - name: Run smoke tests
        run: |
          set -euo pipefail
          docker network create harmony-smoke
          docker run -d \
            --name harmony-postgres \
            --network harmony-smoke \
            -e POSTGRES_DB=harmony \
            -e POSTGRES_USER=harmony \
            -e POSTGRES_PASSWORD=harmony \
            postgres:16
          for attempt in $(seq 1 20); do
            if docker exec harmony-postgres pg_isready -U harmony -d harmony >/dev/null 2>&1; then
              break
            fi
            sleep 2
          done
          docker run -d \
            --name harmony-smoke \
            --network harmony-smoke \
            -e DATABASE_URL=postgresql+psycopg://harmony:harmony@harmony-postgres:5432/harmony \
            -e HARMONY_API_KEYS=dev-key \
            -e PUBLIC_BACKEND_URL=http://127.0.0.1:8080 \
            -p 8080:8080 \
            harmony:ci-test
          cleanup() {
            docker rm -f harmony-smoke harmony-postgres >/dev/null 2>&1 || true
            docker network rm harmony-smoke >/dev/null 2>&1 || true
          }
          trap cleanup EXIT

          for attempt in $(seq 1 30); do
            if curl -fsS http://127.0.0.1:8080/api/health/ready | jq -e '.status == "ok"' >/dev/null; then
              break
            fi
            sleep 2
          done
          curl -fsS http://127.0.0.1:8080/api/health/ready | jq -e '.status == "ok"' >/dev/null
          curl -fsS http://127.0.0.1:8080/ | grep -qi '<!doctype html'

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=unified-image
          cache-to: type=gha,scope=unified-image,mode=max
