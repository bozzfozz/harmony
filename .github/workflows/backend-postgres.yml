name: Backend PostgreSQL

on:
  push:
    branches:
      - main
      - feature/**
      - fix/**
      - chore/**
      - ci/**
  pull_request:

jobs:
  backend-postgres:
    name: Backend (PostgreSQL) Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        database: ["postgres"]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: harmony
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/harmony
      PGPASSWORD: postgres
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-postgres-${{ hashFiles('**/requirements*.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install black==24.8.0 ruff==0.12.11 isort==5.13.2 mypy
      - name: Wait for database
        run: |
          for attempt in {1..30}; do
            if pg_isready --host=localhost --port=5432 --username=postgres; then
              exit 0
            fi
            sleep 1
          done
          exit 1
      - name: Alembic upgrade
        run: alembic upgrade head
      - name: Pytest (PostgreSQL subset)
        run: pytest -m postgres -q
      - name: Alembic downgrade
        run: alembic downgrade base
