services:
  harmony:
    image: ghcr.io/bozzfozz/harmony:latest
    container_name: harmony
    restart: unless-stopped
    depends_on:
      - slskd
      - postgres
    env_file:
      - ./.env
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      UMASK: "${UMASK:-007}"
      OAUTH_SPLIT_MODE: "${OAUTH_SPLIT_MODE:-false}"
      OAUTH_STATE_DIR: /data/runtime/oauth_state
      OAUTH_STATE_TTL_SEC: "${OAUTH_STATE_TTL_SEC:-600}"
      OAUTH_STORE_HASH_CV: "${OAUTH_STORE_HASH_CV:-true}"
      DATABASE_URL: postgresql+psycopg://harmony:harmony@postgres:5432/harmony?sslmode=disable
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: harmony
      POSTGRES_USER: harmony
      POSTGRES_PASSWORD: harmony
      DATABASE_SSLMODE: disable
      DOWNLOADS_DIR: /data/downloads
      MUSIC_DIR: /data/music
      WORKER_CONCURRENCY: "${WORKER_CONCURRENCY:-4}"
      MAX_RETRIES: "${DOWNLOAD_MAX_RETRIES:-5}"
      SLSKD_BASE_URL: http://slskd:5030
      HARMONY_API_KEYS: change-me
      ALLOWED_ORIGINS: http://localhost:8080
      PUBLIC_BACKEND_URL: http://localhost:8080
      PUBLIC_SENTRY_DSN: ""
      PUBLIC_FEATURE_FLAGS: "{}"
    ports:
      - "8080:8080"
      - "8888:8080"
    volumes:
      - harmony-data:/data
      - type: bind
        source: /srv/media/downloads
        target: /data/downloads
      - type: bind
        source: /srv/media/music
        target: /data/music
      - type: bind
        source: /srv/harmony/runtime/oauth_state
        target: /data/runtime/oauth_state
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/api/health/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  slskd:
    image: ghcr.io/slskd/slskd:latest
    container_name: slskd
    restart: unless-stopped
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      UMASK: "${UMASK:-007}"
    ports:
      - "5030:5030"
    volumes:
      - type: bind
        source: /srv/media/downloads
        target: /data/downloads
      - type: bind
        source: /srv/media/music
        target: /data/music
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5030/api/v0/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: harmony
      POSTGRES_USER: harmony
      POSTGRES_PASSWORD: harmony
    ports:
      - "5432:5432"
    volumes:
      - harmony-pg-data:/var/lib/postgresql/data

volumes:
  harmony-data:
  harmony-pg-data:
