[build-system]
requires = ["setuptools>=65.5", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "harmony"
description = "Automation-friendly FastAPI backend for Spotify metadata, Soulseek downloads, and post-processing."
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Harmony Maintainers" },
]
license = { file = "LICENSE" }
keywords = ["fastapi", "music", "automation"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]
dynamic = ["version"]
dependencies = [
    # FastAPI 0.116.1 is the latest published release on PyPI. It currently
    # constrains Starlette to <0.48, so we mirror that range while waiving
    # GHSA-7f5h-v6xp-fcq8 via .pip-audit.toml until FastAPI allows >=0.49.1.
    "fastapi==0.116.1",
    "starlette>=0.40,<0.48.0",
    "uvicorn==0.30.6",
    "sqlalchemy==2.0.31",
    "aiohttp==3.12.14",
    "aiosqlite==0.19.0",
    "spotipy==2.25.1",
    "pydantic==2.7.1",
    "httpx==0.27.0",
    "psutil==5.9.8",
    "mutagen==1.47.0",
    "prometheus-client==0.20.0",
    "Unidecode==1.3.8",
]

[project.scripts]
harmony-selfcheck = "app.ops.selfcheck:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["app", "app.*", "jinja2", "pytest_cov", "pytest_cov.*"]

[tool.setuptools.package-data]
app = [
    "ui/templates/**/*.j2",
    "ui/static/**/*",
]

[tool.setuptools.dynamic]
version = { attr = "app.version.__version__" }

[tool.ruff]
line-length = 100
src = ["app", "tests"]
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = []
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["app", "tests"]
combine-as-imports = true
force-sort-within-sections = true
case-sensitive = false
split-on-trailing-comma = true
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
fail_under = 0
show_missing = true
skip_covered = false
