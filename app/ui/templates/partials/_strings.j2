{% macro app_name() %}Harmony Operator Console{% endmacro %}

{% macro page_title(page_id) -%}
  {%- set titles = {
    "login": "Login",
    "dashboard": "Dashboard",
    "operations": "Operations",
    "downloads": "Downloads",
    "jobs": "Jobs",
    "activity": "Activity",
    "watchlist": "Watchlist",
    "spotify": "Spotify",
    "search": "Soulseek search",
    "soulseek": "Soulseek",
    "admin": "Administration",
    "system": "System diagnostics",
    "settings": "Settings",
  } -%}
  {%- if page_id in titles -%}
    {{ titles[page_id] }} · {{ app_name() }}
  {%- else -%}
    {{ page_id }} · {{ app_name() }}
  {%- endif -%}
{%- endmacro %}

{% macro section_heading(page_id) -%}
  {%- set headings = {
    "login": "Sign in",
    "dashboard": "Welcome",
    "operations": "Operations overview",
    "downloads": "Download queue",
    "jobs": "Background jobs",
    "activity": "Recent activity",
    "watchlist": "Watchlist",
    "spotify": "Spotify integration",
    "search": "Soulseek search",
    "soulseek": "Soulseek integration",
    "admin": "Administration",
    "system": "System diagnostics",
    "settings": "Settings management",
  } -%}
  {%- if page_id in headings -%}
    {{ headings[page_id] }}
  {%- else -%}
    {{ page_id }}
  {%- endif -%}
{%- endmacro %}

{% macro nav_label(key) -%}
  {%- set labels = {
    "nav.home": "Home",
    "nav.spotify": "Spotify",
    "nav.soulseek": "Soulseek",
    "nav.operations": "Operations",
    "nav.admin": "Admin",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro form_label(key) -%}
  {%- set labels = {
    "login.api_key": "API key",
    "search.query": "Search query",
    "search.limit": "Result limit",
    "search.sources.legend": "Sources",
    "search.sources.spotify": "Spotify",
    "search.sources.soulseek": "Soulseek",
    "spotify.manual.redirect": "Redirect URL",
    "spotify.backfill.max_items": "Max items",
    "spotify.saved.track_ids": "Track IDs",
    "spotify.recommendations.seed_artists": "Artist seeds",
    "spotify.recommendations.seed_tracks": "Track seeds",
    "spotify.recommendations.seed_genres": "Genre seeds",
    "spotify.recommendations.limit": "Result limit",
    "spotify.free_ingest.playlist_links": "Playlist links",
    "spotify.free_ingest.tracks": "Track list",
    "spotify.free_ingest.upload_file": "Track list file",
    "spotify.playlists.filter.owner": "Playlist owner",
    "spotify.playlists.filter.status": "Sync status",
    "system.secrets.override": "Override value",
    "settings.key": "Setting key",
    "settings.value": "Value",
    "settings.artist_preferences.artist": "Artist ID",
    "settings.artist_preferences.release": "Release ID",
    "settings.artist_preferences.selected": "Selected",
    "soulseek.user.username": "Username",
    "soulseek.user.path": "Directory path",
    "soulseek.discography.artist_id": "Artist ID",
    "soulseek.discography.artist_name": "Artist name",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro form_help(key) -%}
  {%- set labels = {
    "search.sources.description": "Select the providers to include in your search.",
    "spotify.saved.track_ids": "Enter one or more Spotify track IDs separated by commas or spaces.",
    "spotify.recommendations.seed_artists": "Enter up to five Spotify artist IDs, separated by commas or spaces.",
    "spotify.recommendations.seed_tracks": "Enter up to five Spotify track IDs, separated by commas or spaces.",
    "spotify.recommendations.seed_genres": "Provide Spotify genre seeds, separated by commas or new lines.",
    "spotify.free_ingest.playlist_links": "Paste Spotify playlist URLs, one per line.",
    "spotify.free_ingest.tracks": "Provide track entries in \"Artist - Title\" format, one per line.",
    "spotify.free_ingest.upload_file": "Upload a .txt or .m3u playlist export to submit tracks.",
    "settings.value.description": "Leave empty to remove a stored override and fall back to defaults.",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro soulseek_downloads_asset_label(asset) -%}
  {%- set labels = {
    "lyrics": "Lyrics",
    "metadata": "Metadata",
    "artwork": "Artwork",
  } -%}
  {{ labels.get(asset, asset) }}
{%- endmacro %}

{% macro soulseek_downloads_asset_slug(asset) -%}
  {%- set labels = {
    "lyrics": "lyrics",
    "metadata": "metadata",
    "artwork": "artwork",
  } -%}
  {{ labels.get(asset, asset) }}
{%- endmacro %}

{% macro soulseek_downloads_asset_action_label(asset, action) -%}
  {%- set asset_label = soulseek_downloads_asset_label(asset) -%}
  {%- set asset_slug = soulseek_downloads_asset_slug(asset) -%}
  {%- if action == "view" -%}
    View {{ asset_slug }}
  {%- elif action == "refresh" -%}
    Refresh {{ asset_slug }}
  {%- elif action == "delete" -%}
    Remove {{ asset_slug }}
  {%- else -%}
    {{ action }} {{ asset_slug }}
  {%- endif -%}
{%- endmacro %}

{% macro soulseek_downloads_asset_status(asset, status) -%}
  {%- set asset_label = soulseek_downloads_asset_label(asset) -%}
  {%- if status in ("done", "completed", "ready", "available") -%}
    {{ asset_label }} ready
  {%- elif status in ("pending", "queued") -%}
    {{ asset_label }} pending
  {%- elif status in ("running", "processing") -%}
    {{ asset_label }} processing
  {%- elif status in ("failed", "error", "unavailable") -%}
    {{ asset_label }} failed
  {%- else -%}
    {{ asset_label }} status unknown
  {%- endif -%}
{%- endmacro %}

{% macro soulseek_download_asset_modal_title(asset, filename) -%}
  {%- set asset_label = soulseek_downloads_asset_label(asset) -%}
  {{ asset_label }} for {{ filename }}
{%- endmacro %}

{% macro soulseek_download_asset_pending(asset) -%}
  {%- set asset_label = soulseek_downloads_asset_label(asset) -%}
  {{ asset_label }} generation is still in progress. Try again later.
{%- endmacro %}

{% macro soulseek_download_asset_missing(asset) -%}
  {%- set asset_label = soulseek_downloads_asset_label(asset) -%}
  {{ asset_label }} are not available for this download.
{%- endmacro %}

{% macro soulseek_download_metadata_label(field) -%}
  {%- set labels = {
    "genre": "Genre",
    "composer": "Composer",
    "producer": "Producer",
    "isrc": "ISRC",
    "copyright": "Copyright",
  } -%}
  {{ labels.get(field, field) }}
{%- endmacro %}

{% macro soulseek_download_metadata_value_missing() %}Not provided.{% endmacro %}

{% macro soulseek_download_artwork_alt(filename) -%}
  Artwork for {{ filename }}
{%- endmacro %}

{% macro button_label(key) -%}
  {%- set parts = key.split(".") -%}
  {%- if key.count(".") == 3 and parts[0] == "soulseek" and parts[1] == "downloads" and parts[2] in ("lyrics", "metadata", "artwork") -%}
    {{ soulseek_downloads_asset_action_label(parts[2], parts[3]) }}
  {%- else -%}
    {%- set labels = {
    "login.submit": "Login",
    "logout": "Logout",
    "dashboard.action.operator": "Operator action",
    "dashboard.action.admin": "Admin action",
    "spotify.connect": "Connect",
    "spotify.manual.submit": "Complete manually",
    "spotify.backfill.run": "Start backfill",
    "spotify.backfill.pause": "Pause",
    "spotify.backfill.resume": "Resume",
    "spotify.backfill.cancel": "Cancel",
    "spotify.saved.save": "Save tracks",
    "spotify.saved.queue": "Queue download",
    "spotify.saved.remove": "Remove",
    "spotify.account.refresh": "Refresh account",
    "spotify.account.reset_scopes": "Reset scopes",
    "spotify.recommendations.submit": "Fetch recommendations",
    "spotify.recommendations.load_defaults": "Load defaults",
    "spotify.recommendations.save_defaults": "Save as defaults",
    "spotify.track.view": "View details",
    "modal.close": "Close",
    "search.submit": "Search",
    "search.action.queue": "Queue download",
    "spotify.playlists.view_tracks": "View tracks",
    "spotify.playlists.apply_filters": "Apply filters",
    "spotify.playlists.refresh": "Refresh",
    "spotify.playlists.force_sync": "Force sync",
    "spotify.free_ingest.submit": "Submit ingest request",
    "spotify.free_ingest.upload_file": "Upload track file",
    "spotify.runbook.open": "Open Spotify runbook",
    "fragments.retry": "Retry",
    "soulseek.uploads.cancel": "Cancel upload",
    "soulseek.uploads.refresh": "Refresh",
    "soulseek.uploads.show_active": "Active uploads",
    "soulseek.uploads.show_all": "All uploads",
    "soulseek.uploads.cleanup": "Remove completed uploads",
    "soulseek.downloads.requeue": "Requeue",
    "soulseek.downloads.cancel": "Cancel",
    "soulseek.downloads.refresh": "Refresh",
    "soulseek.downloads.show_active": "Active downloads",
    "soulseek.downloads.show_all": "All downloads",
    "soulseek.downloads.cleanup": "Remove completed downloads",
    "soulseek.retry": "Retry",
    "soulseek.user.lookup": "Lookup user",
    "soulseek.user.browse": "Browse directory",
    "soulseek.discography.new_job": "Queue discography job",
    "soulseek.discography.submit": "Queue job",
    "watchlist.create": "Add artist",
    "operations.view_details": "Open details",
    "system.health.refresh": "Refresh",
    "system.integrations.refresh": "Refresh",
    "system.services.refresh": "Refresh",
    "system.secrets.validate": "Validate secret",
    "settings.save": "Save setting",
    "settings.history.refresh": "Refresh history",
    "settings.artist_preferences.refresh": "Refresh preferences",
    "settings.artist_preferences.add": "Add preference",
    "settings.artist_preferences.enable": "Enable",
    "settings.artist_preferences.disable": "Disable",
    "settings.artist_preferences.remove": "Remove",
  } -%}
    {{ labels.get(key, key) }}
  {%- endif -%}
{%- endmacro %}

{% macro spotify_time_range_group_label() -%}
  {%- set labels = {
    "spotify.time_range.group": "Time range",
  } -%}
  {{ labels.get("spotify.time_range.group", "spotify.time_range.group") }}
{%- endmacro %}

{% macro spotify_time_range_option_label(key) -%}
  {%- set labels = {
    "spotify.time_range.short": "Last 4 weeks",
    "spotify.time_range.medium": "Last 6 months",
    "spotify.time_range.long": "All time",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro link_text(key) -%}
  {%- set labels = {
    "operations.back_to_dashboard": "Back to dashboard",
    "operations.back_to_overview": "Back to operations overview",
    "operations.view_downloads": "View download queue",
    "operations.view_jobs": "View orchestrator jobs",
    "operations.view_watchlist": "Manage watchlist",
    "operations.view_activity": "View activity log",
    "admin.system.link": "Open system diagnostics",
    "admin.settings.link": "Open settings",
    "system.metrics": "Open metrics",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro button_tooltip(key) -%}
  {%- set tooltips = {
    "spotify.runbook.open": "Open the Spotify runbook documentation in a new tab.",
  } -%}
  {{ tooltips.get(key, key) }}
{%- endmacro %}

{% macro admin_page_intro() %}Access key administration tools to manage system health and configuration.{% endmacro %}

{% macro admin_card_title(key) -%}
  {%- set labels = {
    "admin.system.title": "System diagnostics",
    "admin.settings.title": "Settings",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro admin_card_description(key) -%}
  {%- set labels = {
    "admin.system.description": "Review health checks, readiness signals, and integration status across Harmony services.",
    "admin.settings.description": "Configure UI access, security defaults, and operational preferences for administrators.",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro operations_page_intro() %}Monitor key operator workflows from a single overview.{% endmacro %}

{% macro downloads_page_intro() %}Review and monitor queued downloads with live updates every 15 seconds.{% endmacro %}

{% macro jobs_page_intro() %}Inspect orchestrator jobs and their current status with automatic refreshes.{% endmacro %}

{% macro watchlist_page_intro() %}Add artists to the watchlist and watch processing states update in real time.{% endmacro %}

{% macro activity_page_intro() %}Follow recent activity entries with automatic refreshes and pagination controls.{% endmacro %}

{% macro system_page_intro() %}Inspect real-time health, readiness, and credential status across Harmony services.{% endmacro %}

{% macro settings_page_intro() %}Review and adjust configuration overrides applied through the operator console.{% endmacro %}

{% macro settings_manage_description() %}Provide a key and value to override defaults or clear overrides for critical services.{% endmacro %}

{% macro settings_history_description() %}Track the most recent configuration changes applied by administrators.{% endmacro %}

{% macro settings_artist_preferences_description() %}Maintain preferred releases for highlighted artists to steer automated selections.{% endmacro %}

{% macro settings_section_title(key) -%}
  {%- set titles = {
    "manage": "Manage settings",
    "history": "Change history",
    "artist_preferences": "Artist preferences",
  } -%}
  {{ titles.get(key, key) }}
{%- endmacro %}

{% macro settings_last_updated(value) -%}
  {%- if value -%}
    Last updated {{ value }}.
  {%- else -%}
    Last updated recently.
  {%- endif -%}
{%- endmacro %}

{% macro system_section_title(key) -%}
  {%- set titles = {
    "liveness": "Liveness",
    "readiness": "Readiness",
    "services": "Service credentials",
    "integrations": "Integrations",
    "secrets": "Secret validation",
  } -%}
  {{ titles.get(key, key) }}
{%- endmacro %}

{% macro system_readiness_heading(key) -%}
  {%- set labels = {
    "database": "Database",
    "dependencies": "Dependencies",
    "components": "Orchestrator components",
    "jobs": "Orchestrator jobs",
    "enabled": "Enabled jobs",
    "disabled": "Disabled jobs",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro system_integrations_header(key) -%}
  {%- set labels = {
    "provider": "Provider",
    "status": "Status",
    "details": "Details",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro system_field_label(key) -%}
  {%- set labels = {
    "version": "Version",
    "uptime": "Uptime",
    "validated_at": "Validated at",
    "note": "Note",
    "reason": "Reason",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro system_field_placeholder() %}—{% endmacro %}

{% macro system_empty_state(key) -%}
  {%- set labels = {
    "dependencies": "No dependencies reported.",
    "components": "No orchestrator components reported.",
    "jobs": "No orchestrator jobs reported.",
    "services": "No services detected.",
    "integrations": "No integrations reported.",
    "enabled_jobs": "No jobs enabled.",
    "disabled_jobs": "No jobs disabled.",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro system_service_missing(values) -%}
  Missing: {%- for value in values %}{% if not loop.first %}, {% endif %}{{ value }}{% endfor %}
{%- endmacro %}

{% macro system_service_optional(values) -%}
  Optional missing: {%- for value in values %}{% if not loop.first %}, {% endif %}{{ value }}{% endfor %}
{%- endmacro %}

{% macro system_secret_title(key) -%}
  {%- set labels = {
    "system.secrets.spotify.title": "Spotify credentials",
    "system.secrets.soulseek.title": "Soulseek credentials",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro system_secret_description(key) -%}
  {%- set labels = {
    "system.secrets.spotify.description": "Validate stored Spotify client credentials and optional overrides.",
    "system.secrets.soulseek.description": "Verify Harmony can authenticate with the configured Soulseek daemon.",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro system_secret_mode(key) -%}
  {%- set labels = {
    "system.secrets.mode.live": "Live value",
    "system.secrets.mode.format": "Format check",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro status_badge_label(key) -%}
  {%- set labels = {
    "status.enabled": "Enabled",
    "status.disabled": "Disabled",
    "soulseek.status.connected": "Connected",
    "soulseek.status.degraded": "Limited",
    "soulseek.status.disconnected": "Disconnected",
    "soulseek.status.unknown": "Unknown",
    "soulseek.integration.ok": "Healthy",
    "soulseek.integration.degraded": "Degraded",
    "soulseek.integration.down": "Offline",
    "soulseek.integration.unknown": "Unknown",
    "soulseek.config.api_key_missing": "Missing",
    "soulseek.discography.status.pending": "Pending",
    "soulseek.discography.status.queued": "Queued",
    "soulseek.discography.status.running": "Running",
    "soulseek.discography.status.completed": "Completed",
    "soulseek.discography.status.failed": "Failed",
    "soulseek.discography.status.cancelled": "Cancelled",
    "soulseek.discography.status.unknown": "Unknown",
    "soulseek.user.online": "Online",
    "soulseek.user.offline": "Offline",
    "soulseek.user.away": "Away",
    "soulseek.user.unknown": "Status unknown",
    "soulseek.user.browse.active": "Browsing",
    "soulseek.user.browse.waiting": "Waiting",
    "soulseek.user.browse.completed": "Completed",
    "soulseek.user.browse.unknown": "Browse idle",
    "spotify.status.connected": "Connected",
    "spotify.status.unauthenticated": "Authentication required",
    "spotify.status.unconfigured": "Not configured",
    "system.status.ok": "OK",
    "system.status.up": "Up",
    "system.status.ready": "Ready",
    "system.status.down": "Down",
    "system.status.fail": "Failed",
    "system.status.degraded": "Degraded",
    "system.status.unknown": "Unknown",
    "system.status.disabled": "Disabled",
    "system.status.not_required": "Not required",
    "system.status.valid": "Valid",
    "system.status.invalid": "Invalid",
    "system.status.passing": "Passing",
    "system.status.pending": "Pending",
    "system.status.n-a": "Not available",
    "soulseek.downloads.status.queued": "Queued",
    "soulseek.downloads.status.pending": "Pending",
    "soulseek.downloads.status.running": "Running",
    "soulseek.downloads.status.downloading": "Downloading",
    "soulseek.downloads.status.failed": "Failed",
    "soulseek.downloads.status.dead_letter": "Dead letter",
    "soulseek.downloads.status.cancelled": "Cancelled",
    "soulseek.downloads.status.completed": "Completed",
    "soulseek.downloads.status.unknown": "Unknown",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro table_header(key) -%}
  {%- set parts = key.split(".") -%}
  {%- if key.count(".") == 2 and parts[0] == "soulseek" and parts[1] == "downloads" and parts[2] in ("lyrics", "metadata", "artwork") -%}
    {{ soulseek_downloads_asset_label(parts[2]) }}
  {%- else -%}
    {%- set labels = {
    "dashboard.features.name": "Feature",
    "dashboard.features.status": "Status",
    "soulseek.providers.name": "Provider",
    "soulseek.providers.status": "Status",
    "soulseek.providers.details": "Details",
    "soulseek.config.setting": "Setting",
    "soulseek.config.value": "Value",
    "activity.timestamp": "Timestamp",
    "activity.type": "Type",
    "activity.status": "Status",
    "activity.details": "Details",
    "watchlist.artist": "Artist",
    "watchlist.priority": "Priority",
    "watchlist.state": "State",
    "downloads.id": "ID",
    "downloads.filename": "Filename",
    "downloads.status": "Status",
    "downloads.progress": "Progress",
    "downloads.priority": "Priority",
    "downloads.user": "User",
    "downloads.updated": "Updated",
    "soulseek.uploads.id": "ID",
    "soulseek.uploads.user": "User",
    "soulseek.uploads.filename": "File",
    "soulseek.uploads.status": "Status",
    "soulseek.uploads.progress": "Progress",
    "soulseek.uploads.size": "Size",
    "soulseek.uploads.speed": "Speed",
    "soulseek.uploads.actions": "Actions",
    "soulseek.downloads.retry_count": "Retries",
    "soulseek.downloads.next_retry": "Next retry",
    "soulseek.downloads.last_error": "Last error",
    "soulseek.downloads.live": "Live queue",
    "soulseek.downloads.requeue": "Requeue",
    "soulseek.downloads.cancel": "Cancel",
    "jobs.name": "Job",
    "jobs.status": "Status",
    "jobs.enabled": "Enabled",
    "soulseek.discography.job_id": "Job ID",
    "soulseek.discography.artist": "Artist",
    "soulseek.discography.status": "Status",
    "soulseek.discography.created": "Created",
    "soulseek.discography.updated": "Updated",
    "search.title": "Title",
    "search.artist": "Artist",
    "search.source": "Source",
    "search.score": "Score",
    "search.bitrate": "Bitrate",
    "search.actions": "Actions",
    "spotify.playlists.name": "Playlist",
    "spotify.playlists.owner": "Owner",
    "spotify.playlists.tracks": "Tracks",
    "spotify.playlists.followers": "Followers",
    "spotify.playlists.sync_status": "Sync status",
    "spotify.playlists.updated": "Updated",
    "spotify.playlists.actions": "Actions",
    "spotify.playlist_items.track": "Track",
    "spotify.playlist_items.artists": "Artists",
    "spotify.playlist_items.album": "Album",
    "spotify.playlist_items.added": "Added",
    "spotify.playlist_items.added_by": "Added by",
    "spotify.playlist_items.actions": "Actions",
    "spotify.top_tracks.rank": "Rank",
    "spotify.top_tracks.name": "Track",
    "spotify.top_tracks.artists": "Artists",
    "spotify.top_tracks.album": "Album",
    "spotify.top_tracks.popularity": "Popularity",
    "spotify.top_tracks.duration": "Duration",
    "spotify.top_tracks.link": "Spotify",
    "spotify.top_tracks.actions": "Actions",
    "spotify.recommendations.track": "Track",
    "spotify.recommendations.artists": "Artists",
    "spotify.recommendations.album": "Album",
    "spotify.recommendations.link": "Spotify",
    "spotify.recommendations.preview": "Preview",
    "spotify.saved_tracks.name": "Track",
    "spotify.saved_tracks.artists": "Artists",
    "spotify.saved_tracks.album": "Album",
    "spotify.saved_tracks.added": "Saved",
    "spotify.saved_tracks.actions": "Actions",
    "spotify.artists.name": "Artist",
    "spotify.artists.link": "Spotify",
    "spotify.artists.followers": "Followers",
    "spotify.artists.popularity": "Popularity",
    "spotify.artists.genres": "Genres",
    "spotify.top_artists.rank": "Rank",
    "spotify.top_artists.name": "Artist",
    "spotify.top_artists.link": "Spotify",
    "spotify.top_artists.followers": "Followers",
    "spotify.top_artists.popularity": "Popularity",
    "spotify.top_artists.genres": "Genres",
    "settings.key": "Setting",
    "settings.value": "Value",
    "settings.override": "Status",
    "settings.history.key": "Setting",
    "settings.history.old": "Previous value",
    "settings.history.new": "New value",
    "settings.history.changed": "Changed at",
    "settings.artist_preferences.artist": "Artist ID",
    "settings.artist_preferences.release": "Release ID",
    "settings.artist_preferences.selected": "Selected",
    "settings.artist_preferences.actions": "Actions",
  } -%}
    {{ labels.get(key, key) }}
  {%- endif -%}
{%- endmacro %}

{% macro caption(key) -%}
  {%- set labels = {
    "dashboard.features.caption": "Available features",
    "activity.table.caption": "Recent system activity",
    "watchlist.table.caption": "Tracked artists",
    "downloads.table.caption": "Download queue",
    "jobs.table.caption": "Orchestrator jobs",
    "search.results.caption": "Search results",
    "spotify.playlists.caption": "Tracked Spotify playlists",
    "spotify.playlist_items.caption": "Cached Spotify playlist tracks",
    "spotify.top_tracks.caption": "Top Spotify tracks",
    "spotify.top_artists.caption": "Top Spotify artists",
    "spotify.saved_tracks.caption": "Saved Spotify tracks",
    "spotify.artists.caption": "Followed Spotify artists",
    "spotify.recommendations.caption": "Recommended Spotify tracks",
    "soulseek.providers.caption": "Provider health",
    "soulseek.config.caption": "Soulseek configuration",
    "soulseek.uploads.caption": "Soulseek uploads",
    "settings.table.caption": "Current configuration values",
    "settings.history.caption": "Recent configuration changes",
    "settings.artist_preferences.caption": "Configured artist preferences",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro table_cell(key) -%}
  {%- set parts = key.split(".") -%}
  {%- if key.count(".") == 4 and parts[0] == "soulseek" and parts[1] == "downloads" and parts[3] == "status" and parts[2] in ("lyrics", "metadata", "artwork") -%}
    {{ soulseek_downloads_asset_status(parts[2], parts[4]) }}
  {%- else -%}
    {%- set labels = {
    "feature.spotify": "Spotify tools",
    "feature.soulseek": "Soulseek tools",
    "feature.dlq": "DLQ tools",
    "feature.imports": "Imports",
    "soulseek.providers.details.none": "No additional details",
    "soulseek.config.base_url": "API base URL",
    "soulseek.config.api_key": "API key",
    "soulseek.config.api_key_set": "••••••",
    "soulseek.config.timeout": "Request timeout",
    "soulseek.config.retry_max": "Retry attempts",
    "soulseek.config.retry_backoff": "Retry backoff",
    "soulseek.config.retry_jitter": "Retry jitter",
    "soulseek.config.preferred_formats": "Preferred formats",
    "soulseek.config.max_results": "Max results",
    "soulseek.config.security_profile": "Security profile",
    "soulseek.config.require_auth": "Authentication required",
    "soulseek.config.rate_limiting": "Rate limiting",
    "watchlist.state.active": "Active",
    "watchlist.state.paused": "Paused",
    "spotify.status.connected": "Connected",
    "spotify.status.unauthenticated": "Authentication required",
    "spotify.status.unconfigured": "Not configured",
    "search.action.unavailable": "Not available",
    "settings.value.unset": "Not configured",
    "settings.override.present": "Configured",
    "settings.override.missing": "Using default",
    "settings.artist_preferences.state.enabled": "Enabled",
    "settings.artist_preferences.state.disabled": "Disabled",
  } -%}
    {{ labels.get(key, key) }}
  {%- endif -%}
{%- endmacro %}

{% macro role_name(role) -%}
  {%- set labels = {
    "read_only": "Read only",
    "operator": "Operator",
    "admin": "Admin",
  } -%}
  {%- if role in labels -%}
    {{ labels[role] }}
  {%- else -%}
    {{ role }}
  {%- endif -%}
{%- endmacro %}

{% macro dashboard_role_label(role) -%}
  Current role: {{ role_name(role) }}
{%- endmacro %}

{% macro dashboard_features_heading() %}Feature availability{% endmacro %}

{% macro dashboard_actions_heading() %}Available actions{% endmacro %}

{% macro dashboard_activity_heading() %}Recent activity{% endmacro %}

{% macro loading_placeholder() %}Loading…{% endmacro %}

{% macro activity_empty_state() %}No recent activity recorded yet.{% endmacro %}

{% macro watchlist_empty_state() %}No artists are tracked on the watchlist.{% endmacro %}

{% macro fragment_loading(key) -%}
  {%- if key == "loading" -%}
    {{ loading_placeholder() }}
  {%- elif key == "spotify.status" -%}
    Checking Spotify connection…
  {%- elif key == "spotify.account" -%}
    Loading Spotify account details…
  {%- elif key == "spotify.saved_tracks" -%}
    Loading saved Spotify tracks…
  {%- elif key == "spotify.top_tracks" -%}
    Loading top Spotify tracks…
  {%- elif key == "spotify.playlists" -%}
    Loading cached Spotify playlists…
  {%- elif key == "spotify.playlist_items" -%}
    Loading cached Spotify playlist tracks…
  {%- elif key == "spotify.artists" -%}
    Loading followed Spotify artists…
  {%- elif key == "spotify.recommendations" -%}
    Preparing Spotify recommendations…
  {%- elif key == "spotify.top_artists" -%}
    Loading top Spotify artists…
  {%- elif key == "spotify.free_ingest" -%}
    Preparing FREE ingest controls…
  {%- elif key == "spotify.backfill" -%}
    Fetching Spotify backfill status…
  {%- elif key == "search.results" -%}
    Waiting for search results…
  {%- elif key == "search.queue" -%}
    Loading the Soulseek queue…
  {%- elif key == "downloads" -%}
    Loading download queue…
  {%- elif key == "jobs" -%}
    Loading job information…
  {%- elif key == "watchlist" -%}
    Loading watchlist entries…
  {%- elif key == "settings-history" -%}
    Loading settings history…
  {%- elif key == "settings-artist-preferences" -%}
    Loading artist preferences…
  {%- elif key == "activity" -%}
    Loading activity entries…
  {%- elif key == "soulseek.status" -%}
    Checking Soulseek connection…
  {%- elif key == "soulseek.configuration" -%}
    Loading Soulseek configuration…
  {%- elif key == "soulseek.uploads" -%}
    Loading active Soulseek uploads…
  {%- elif key == "soulseek.downloads" -%}
    Loading active Soulseek downloads…
  {%- elif key == "soulseek.user.profile" -%}
    Fetching Soulseek user profile…
  {%- elif key == "soulseek.user.directory" -%}
    Browsing Soulseek user directory…
  {%- else -%}
    {{ loading_placeholder() }}
  {%- endif -%}
{%- endmacro %}

{% macro empty_state(key) -%}
  {%- if key == "activity" -%}
    {{ activity_empty_state() }}
  {%- elif key == "watchlist" -%}
    {{ watchlist_empty_state() }}
  {%- elif key == "downloads" -%}
    No downloads are currently queued.
  {%- elif key == "soulseek.downloads" -%}
    No Soulseek downloads are currently queued.
  {%- elif key == "soulseek.uploads" -%}
    No uploads are currently in progress.
  {%- elif key == "soulseek.discography.jobs" -%}
    No discography jobs have been queued yet.
  {%- elif key == "jobs" -%}
    No orchestrator jobs reported yet.
  {%- elif key == "search" -%}
    No matching results found.
  {%- elif key == "spotify.playlists" -%}
    No playlists are currently cached from Spotify.
  {%- elif key == "spotify.playlist_items" -%}
    No tracks are currently cached for this playlist.
  {%- elif key == "spotify.saved_tracks" -%}
    No Spotify tracks are currently saved to your library.
  {%- elif key == "spotify.artists" -%}
    No Spotify artists are currently followed.
  {%- elif key == "spotify.top_tracks" -%}
    Spotify has not reported any top tracks for your account yet.
  {%- elif key == "spotify.top_artists" -%}
    Spotify has not reported any top artists for your account yet.
  {%- elif key == "spotify.recommendations" -%}
    No Spotify recommendations available yet. Submit the form above to fetch suggestions.
  {%- elif key == "settings-history" -%}
    No configuration changes recorded yet.
  {%- elif key == "settings-artist-preferences" -%}
    No artist preferences have been configured.
  {%- else -%}
    {{ key }}
  {%- endif -%}
{%- endmacro %}

{% macro pagination_label(key) -%}
  {%- set labels = {
    "activity": "Activity pagination",
    "watchlist": "Watchlist pagination",
    "downloads": "Downloads pagination",
    "search": "Search pagination",
    "jobs": "Jobs pagination",
    "spotify.playlists": "Spotify playlists pagination",
    "spotify.playlist_items": "Spotify playlist items pagination",
    "spotify.saved_tracks": "Spotify saved tracks pagination",
    "spotify.artists": "Spotify artists pagination",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_status_hint(status) -%}
  {%- if status == "connected" -%}
    Spotify API access is active. You can manage playlists and backfill jobs.
  {%- elif status == "unauthenticated" -%}
    Authentication is required. Use the Connect button or manual completion form.
  {%- else -%}
    Provide Spotify credentials in the settings before connecting.
  {%- endif -%}
{%- endmacro %}

{% macro spotify_manual_hint(oauth, status) -%}
  {%- if oauth.manual_enabled -%}
    Manual completion is enabled. Paste the full redirect URL from Spotify to finish the flow.
  {%- elif status.pro_available -%}
    Manual completion is disabled. Use the Connect button to authenticate through Spotify.
  {%- else -%}
    Manual completion is unavailable until Spotify credentials are configured.
  {%- endif -%}
{%- endmacro %}

{% macro spotify_free_ingest_heading() %}FREE ingest{% endmacro %}

{% macro spotify_free_ingest_description() %}Submit Spotify playlists or track listings for FREE ingest processing.{% endmacro %}

{% macro spotify_free_ingest_playlist_placeholder() %}https://open.spotify.com/playlist/…{% endmacro %}

{% macro spotify_free_ingest_tracks_placeholder() %}Artist - Track title{% endmacro %}

{% macro spotify_free_ingest_drop_hint() %}Drag a playlist export here or use the file picker below.{% endmacro %}

{% macro spotify_free_ingest_drop_default_message() %}Drop a file to upload it via FREE ingest.{% endmacro %}

{% macro spotify_free_ingest_drop_selected_message() %}Ready to upload __FILENAME__.{% endmacro %}

{% macro spotify_free_ingest_drop_uploading_message() %}Uploading __FILENAME__…{% endmacro %}

{% macro spotify_free_ingest_drop_multiple_error() %}Upload one file at a time.{% endmacro %}

{% macro spotify_free_ingest_drop_busy_message() %}Upload in progress. Please wait…{% endmacro %}

{% macro spotify_free_ingest_drop_generic_error() %}Upload failed. Try again with a single file.{% endmacro %}

{% macro spotify_free_ingest_summary_heading() %}Latest submission{% endmacro %}

{% macro spotify_free_ingest_summary_label(key) -%}
  {%- set labels = {
    "accepted_heading": "Accepted",
    "skipped_heading": "Skipped",
    "spotify.free_ingest.summary.accepted_playlists": "Playlists",
    "spotify.free_ingest.summary.accepted_tracks": "Tracks",
    "spotify.free_ingest.summary.accepted_batches": "Batches",
    "spotify.free_ingest.summary.skipped_playlists": "Skipped playlists",
    "spotify.free_ingest.summary.skipped_tracks": "Skipped tracks",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_free_ingest_status_heading() %}Latest FREE ingest job{% endmacro %}

{% macro spotify_free_ingest_status_counts_heading() %}Item counts{% endmacro %}

{% macro spotify_free_ingest_status_metrics_heading() %}Track metrics{% endmacro %}

{% macro spotify_free_ingest_status_label(key) -%}
  {%- set labels = {
    "job_id": "Job ID",
    "state": "State",
    "spotify.free_ingest.status.registered": "Registered",
    "spotify.free_ingest.status.normalized": "Normalized",
    "spotify.free_ingest.status.queued": "Queued",
    "spotify.free_ingest.status.completed": "Completed",
    "spotify.free_ingest.status.failed": "Failed",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_free_ingest_status_metric(key) -%}
  {%- set labels = {
    "queued_tracks": "Queued tracks",
    "failed_tracks": "Failed tracks",
    "skipped_tracks": "Skipped tracks",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_free_ingest_status_empty() %}No FREE ingest job has been recorded yet.{% endmacro %}

{% macro spotify_free_ingest_skip_reason(reason) -%}
  {%- set messages = {
    "limit": "Some items were skipped because the maximum limit was reached.",
    "duplicate": "Duplicate items were skipped.",
    "invalid": "Invalid items were skipped.",
  } -%}
  {{ messages.get(reason, reason) }}
{%- endmacro %}

{% macro spotify_backfill_hint() -%}
  Trigger a Spotify enrichment job for pending FREE ingest items. Requires a valid Spotify session.
{%- endmacro %}

{% macro spotify_backfill_advanced_summary() %}Advanced options{% endmacro %}

{% macro spotify_backfill_option_label(key) -%}
  {%- if key == "spotify.backfill.options.expand_playlists" -%}
    Expand playlists after enrichment
  {%- elif key == "spotify.backfill.options.include_cached" -%}
    Include cached results
  {%- else -%}
    {{ key }}
  {%- endif -%}
{%- endmacro %}

{% macro spotify_backfill_option_hint(key) -%}
  {%- if key == "spotify.backfill.options.expand_playlists_hint" -%}
    Automatically add discovered playlists to the import queue.
  {%- elif key == "spotify.backfill.options.include_cached_hint" -%}
    Reuse cached Spotify lookups when available to speed up processing.
  {%- else -%}
    {{ key }}
  {%- endif -%}
{%- endmacro %}

{% macro spotify_manual_host_hint(host) -%}
  Ensure the public host is reachable at {{ host }} before starting manual completion.
{%- endmacro %}

{% macro spotify_manual_redirect_label() %}Redirect URI{% endmacro %}

{% macro spotify_manual_active_label() %}Active manual sessions{% endmacro %}

{% macro spotify_manual_ttl_label() %}Manual session timeout{% endmacro %}

{% macro spotify_manual_ttl(value) -%}
  {%- if value and value > 0 -%}
    {{ value }} seconds
  {%- else -%}
    No active manual sessions
  {%- endif -%}
{%- endmacro %}

{% macro spotify_backfill_expand_label() %}Expand playlists after enrichment{% endmacro %}

{% macro spotify_backfill_latest_heading() %}Latest job{% endmacro %}

{% macro spotify_backfill_timeline_heading() %}Recent jobs{% endmacro %}

{% macro spotify_backfill_timeline_created_label() %}Created{% endmacro %}

{% macro spotify_backfill_timeline_updated_label() %}Updated{% endmacro %}

{% macro spotify_backfill_field_label(key) -%}
  {%- set labels = {
    "id": "Job ID",
    "state": "State",
    "requested": "Requested",
    "processed": "Processed",
    "matched": "Matched",
    "cache_hits": "Cache hits",
    "cache_misses": "Cache misses",
    "expanded_playlists": "Expanded playlists",
    "expanded_tracks": "Expanded tracks",
    "include_cached_results": "Include cached results",
    "duration": "Duration",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_backfill_unknown_state() %}unknown{% endmacro %}

{% macro spotify_backfill_duration(value) -%}
  {%- if value -%}
    {{ value }} ms
  {%- else -%}
    —
  {%- endif -%}
{%- endmacro %}

{% macro spotify_backfill_empty_state() %}No backfill job has been recorded yet.{% endmacro %}

{% macro spotify_account_field_label(key) -%}
  {%- set labels = {
    "spotify.account.display_name": "Display name",
    "spotify.account.email": "Email address",
    "spotify.account.product": "Product",
    "spotify.account.followers": "Followers",
    "spotify.account.country": "Country",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_account_empty_state() %}No Spotify profile information is available.{% endmacro %}

{% macro spotify_page_intro() %}Manage the Spotify connection, review top tracks and artists, saved tracks, cached playlists, recommendations, and backfill jobs.{% endmacro %}

{% macro spotify_status_heading() %}Connection status{% endmacro %}

{% macro spotify_account_heading() %}Account details{% endmacro %}

{% macro spotify_top_tracks_heading() %}Top tracks{% endmacro %}

{% macro spotify_top_artists_heading() %}Top artists{% endmacro %}

{% macro spotify_recommendations_heading() %}Recommendations{% endmacro %}

{% macro spotify_recommendations_description() %}Generate personalised track suggestions using Spotify seed values.{% endmacro %}

{% macro spotify_recommendations_hint() %}Provide up to five combined artist, track, or genre seeds to fetch Spotify recommendations.{% endmacro %}

{% macro spotify_recommendations_seed_heading() %}Seed summary{% endmacro %}

{% macro spotify_recommendations_seed_type(seed_type) -%}
  {%- set labels = {
    "artist": "Artist",
    "track": "Track",
    "genre": "Genre",
  } -%}
  {{ labels.get(seed_type, seed_type) }}
{%- endmacro %}

{% macro spotify_external_link_hint() %}Open Spotify links in a new tab.{% endmacro %}

{% macro spotify_saved_tracks_heading() %}Saved tracks{% endmacro %}

{% macro spotify_playlists_heading() %}Cached playlists{% endmacro %}

{% macro spotify_playlists_filter_owner_label() %}
  {{ form_label("spotify.playlists.filter.owner") }}
{% endmacro %}

{% macro spotify_playlists_filter_status_label() %}
  {{ form_label("spotify.playlists.filter.status") }}
{% endmacro %}

{% macro spotify_playlists_filter_any() %}All{% endmacro %}

{% macro spotify_playlist_items_heading(name) -%}
  {%- if name -%}
    Tracks in {{ name }}
  {%- else -%}
    Playlist tracks
  {%- endif -%}
{%- endmacro %}

{% macro spotify_playlist_items_summary(total, limit, offset, count) -%}
  {%- if count and count > 0 -%}
    {%- set start = offset + 1 -%}
    {%- set end = offset + count -%}
    {%- if total and end > total -%}
      {%- set end = total -%}
    {%- endif -%}
    {%- if total -%}
      {%- set total_display = total -%}
    {%- else -%}
      {%- set total_display = count -%}
    {%- endif -%}
    Showing {{ start }}-{{ end }} of {{ total_display }} tracks.
  {%- else -%}
    No tracks to display.
  {%- endif -%}
{%- endmacro %}

{% macro spotify_playlist_items_region_label() %}Playlist tracks list{% endmacro %}

{% macro spotify_artists_heading() %}Followed artists{% endmacro %}

{% macro spotify_backfill_heading() %}Backfill jobs{% endmacro %}

{% macro pagination_prev() %}Previous{% endmacro %}

{% macro pagination_next() %}Next{% endmacro %}

{% macro fragment_error_default() %}The requested data could not be loaded. Please try again.{% endmacro %}

{% macro login_description() %}Use your Harmony API key to access the operator console.{% endmacro %}

{% macro search_page_intro() %}Run Soulseek searches and monitor the active download queue.{% endmacro %}

{% macro search_form_heading() %}Search Soulseek{% endmacro %}

{% macro search_form_description() %}Enter a query to search across configured music sources.{% endmacro %}

{% macro search_results_heading() %}Results{% endmacro %}

{% macro search_results_placeholder() %}Submit a query to view matching files.{% endmacro %}

{% macro search_queue_heading() %}Download queue{% endmacro %}

{% macro search_queue_description() %}The queue refreshes automatically while this page remains open.{% endmacro %}

{% macro soulseek_page_intro() %}Monitor the Soulseek integration and manage transfer activity.{% endmacro %}

{% macro soulseek_status_heading() %}Connection status{% endmacro %}

{% macro soulseek_connection_label() %}Daemon connectivity{% endmacro %}

{% macro soulseek_integrations_label() %}Integration health{% endmacro %}

{% macro soulseek_providers_heading() %}Provider diagnostics{% endmacro %}

{% macro soulseek_configuration_heading() %}Configuration{% endmacro %}

{% macro soulseek_uploads_heading() %}Active uploads{% endmacro %}

{% macro soulseek_downloads_heading() %}Active downloads{% endmacro %}

{% macro soulseek_discography_heading() %}Discography jobs{% endmacro %}

{% macro soulseek_discography_description() %}Queue complete discography downloads by Soulseek artist ID.{% endmacro %}

{% macro soulseek_discography_loading() %}Loading discography jobs…{% endmacro %}

{% macro soulseek_discography_modal_title() %}Queue discography download{% endmacro %}

{% macro soulseek_discography_modal_description() %}Provide the Soulseek artist identifier to enqueue a discography job.{% endmacro %}

{% macro soulseek_user_profile_heading() %}User profile{% endmacro %}
{% macro soulseek_user_profile_help() %}Enter a Soulseek username to load address and profile information.{% endmacro %}
{% macro soulseek_user_profile_missing(username) %}No profile information was returned for {{ username }}.{% endmacro %}
{% macro soulseek_user_status_heading() %}User status{% endmacro %}
{% macro soulseek_user_status_shared(count) %}{{ count }} shared files reported.{% endmacro %}
{% macro soulseek_user_status_empty(username) %}No status details were returned for {{ username }}.{% endmacro %}
{% macro soulseek_user_browse_heading() %}Browse activity{% endmacro %}
{% macro soulseek_user_browse_progress(percent) %}Browse progress: {{ percent }}{% endmacro %}
{% macro soulseek_user_browse_queue(position, total) -%}
  {% if total %}
    Queue position {{ position }} of {{ total }}
  {% else %}
    Queue position {{ position }}
  {% endif %}
{%- endmacro %}
{% macro soulseek_user_browse_empty() %}No browse activity was reported.{% endmacro %}
{% macro soulseek_user_address_heading() %}Network address{% endmacro %}
{% macro soulseek_user_address_empty() %}No address details were reported.{% endmacro %}
{% macro soulseek_user_info_heading() %}Account details{% endmacro %}
{% macro soulseek_user_info_empty(username) %}No account details were returned for {{ username }}.{% endmacro %}
{% macro soulseek_user_directory_heading() %}Shared directories{% endmacro %}
{% macro soulseek_user_directory_help() %}Enter a Soulseek username to explore shared folders.{% endmacro %}
{% macro soulseek_user_directory_empty(username) %}No directory entries were returned for {{ username }}.{% endmacro %}
{% macro soulseek_user_directory_parent() %}Go up one level{% endmacro %}
{% macro soulseek_user_directory_path(path) %}Current path: {{ path }}{% endmacro %}
{% macro soulseek_user_directories_heading() %}Directories{% endmacro %}
{% macro soulseek_user_directories_empty() %}No subdirectories available.{% endmacro %}
{% macro soulseek_user_files_heading() %}Files{% endmacro %}
{% macro soulseek_user_files_empty() %}No files were reported in this directory.{% endmacro %}
{% macro soulseek_user_files_name() %}Name{% endmacro %}
{% macro soulseek_user_files_size() %}Size{% endmacro %}
{% macro soulseek_user_files_unknown_size() %}Unknown{% endmacro %}

{% macro soulseek_tasks_heading() %}Suggested tasks{% endmacro %}

{% macro soulseek_tasks_description() %}Complete these checks to keep the Soulseek integration healthy.{% endmacro %}

{% macro soulseek_tasks_completion(percent) %}Completion: {{ percent }}%{% endmacro %}

{% macro soulseek_task_title(key) -%}
  {%- set labels = {
    "soulseek.task.daemon": "Verify daemon connectivity",
    "soulseek.task.providers": "Review provider health",
    "soulseek.task.api_key": "Configure API key",
    "soulseek.task.formats": "Set preferred formats",
    "soulseek.task.retry_policy": "Validate retry policy",
    "soulseek.task.retry_jitter": "Enable retry jitter",
    "soulseek.task.timeout": "Check request timeout",
    "soulseek.task.max_results": "Limit result window",
    "soulseek.task.auth": "Require authentication",
    "soulseek.task.rate_limiting": "Enable rate limiting",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro soulseek_task_description(key) -%}
  {%- set labels = {
    "soulseek.task.daemon.desc": "Ensure the Soulseek daemon reports an OK status.",
    "soulseek.task.providers.desc": "All Soulseek providers should report OK status.",
    "soulseek.task.api_key.desc": "Store a valid slskd API key in configuration.",
    "soulseek.task.formats.desc": "Review and confirm the preferred download formats list.",
    "soulseek.task.retry_policy.desc": "Keep retry attempts at three or more to recover from transient failures.",
    "soulseek.task.retry_jitter.desc": "Use retry jitter above 0% to avoid thundering herd behaviour.",
    "soulseek.task.timeout.desc": "Keep the Soulseek request timeout under ten seconds.",
    "soulseek.task.max_results.desc": "Limit search results to one hundred entries or fewer for predictability.",
    "soulseek.task.auth.desc": "Require authentication for operators interacting with Soulseek actions.",
    "soulseek.task.rate_limiting.desc": "Enable rate limiting to protect the Soulseek API from bursts.",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro modal_title(key) -%}
  {%- set labels = {
    "confirm": "Confirm",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_track_detail_title(name) -%}
  {%- if name -%}
    Track details · {{ name }}
  {%- else -%}
    Track details
  {%- endif -%}
{%- endmacro %}

{% macro spotify_track_detail_metadata_heading() %}Metadata{% endmacro %}

{% macro spotify_track_detail_features_heading() %}Audio features{% endmacro %}

{% macro spotify_track_detail_metadata_empty() %}No metadata is available for this track.{% endmacro %}

{% macro spotify_track_detail_features_empty(features_available) -%}
  {%- if not features_available -%}
    Spotify did not return audio features for this track.
  {%- else -%}
    No audio features are available for this track.
  {%- endif -%}
{%- endmacro %}

{% macro spotify_track_detail_field_label(key) -%}
  {%- set labels = {
    "name": "Track",
    "artists": "Artists",
    "album": "Album",
    "release_date": "Release date",
    "duration": "Duration",
    "popularity": "Popularity",
    "explicit": "Explicit",
    "preview_url": "Preview",
    "external_url": "Spotify link",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_track_detail_feature_label(key) -%}
  {%- set labels = {
    "danceability": "Danceability",
    "energy": "Energy",
    "acousticness": "Acousticness",
    "instrumentalness": "Instrumentalness",
    "liveness": "Liveness",
    "speechiness": "Speechiness",
    "valence": "Valence",
    "tempo": "Tempo",
    "loudness": "Loudness",
    "key": "Key",
    "mode": "Mode",
    "time_signature": "Time signature",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_track_detail_boolean(value) -%}
  {{ "Yes" if value else "No" }}
{%- endmacro %}

{% macro spotify_track_detail_value_missing() %}Not available{% endmacro %}

{% macro spotify_track_detail_link_label(key) -%}
  {%- set labels = {
    "preview_url": "Play preview",
    "external_url": "Open in Spotify",
  } -%}
  {{ labels.get(key, key) }}
{%- endmacro %}

{% macro spotify_track_detail_mode_label(value) -%}
  {%- if value == "major" -%}
    Major
  {%- elif value == "minor" -%}
    Minor
  {%- else -%}
    {{ value }}
  {%- endif -%}
{%- endmacro %}
