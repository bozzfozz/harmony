{
  "openapi": "3.1.0",
  "info": {
    "title": "Harmony Backend",
    "version": "1.4.0"
  },
  "paths": {
    "/api/v1/": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Root",
        "operationId": "root_api_v1__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Root Api V1  Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/mode": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Spotify Mode",
        "operationId": "get_spotify_mode_api_v1_spotify_mode_get",
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotifyModeResponse"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0.0
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Spotify"
        ],
        "summary": "Update Spotify Mode",
        "operationId": "update_spotify_mode_api_v1_spotify_mode_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpotifyModePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "type": "object",
                  "title": "Response Update Spotify Mode Api V1 Spotify Mode Post"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0.0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/status": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Spotify Status",
        "operationId": "spotify_status_api_v1_spotify_status_get",
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0.0
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/search/tracks": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Search Tracks",
        "operationId": "search_tracks_api_v1_spotify_search_tracks_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotifySearchResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/search/artists": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Search Artists",
        "operationId": "search_artists_api_v1_spotify_search_artists_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotifySearchResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/search/albums": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Search Albums",
        "operationId": "search_albums_api_v1_spotify_search_albums_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotifySearchResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/artists/followed": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Followed Artists",
        "operationId": "get_followed_artists_api_v1_spotify_artists_followed_get",
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowedArtistsResponse"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0.0
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/artist/{artist_id}/releases": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Artist Releases",
        "operationId": "get_artist_releases_api_v1_spotify_artist__artist_id__releases_get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistReleasesResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/artist/{artist_id}/discography": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Artist Discography",
        "operationId": "get_artist_discography_api_v1_spotify_artist__artist_id__discography_get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscographyResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/playlists": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "List Playlists",
        "operationId": "list_playlists_api_v1_spotify_playlists_get",
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaylistResponse"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0.0
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/playlists/{playlist_id}/tracks": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Playlist Items",
        "operationId": "get_playlist_items_api_v1_spotify_playlists__playlist_id__tracks_get",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playlist Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaylistItemsResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Spotify"
        ],
        "summary": "Add Tracks To Playlist",
        "operationId": "add_tracks_to_playlist_api_v1_spotify_playlists__playlist_id__tracks_post",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playlist Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistTracksPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Spotify"
        ],
        "summary": "Remove Tracks From Playlist",
        "operationId": "remove_tracks_from_playlist_api_v1_spotify_playlists__playlist_id__tracks_delete",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playlist Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistTracksPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/playlists/{playlist_id}/reorder": {
      "put": {
        "tags": [
          "Spotify"
        ],
        "summary": "Reorder Playlist",
        "operationId": "reorder_playlist_api_v1_spotify_playlists__playlist_id__reorder_put",
        "parameters": [
          {
            "name": "playlist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Playlist Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaylistReorderPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/track/{track_id}": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Track Details",
        "operationId": "get_track_details_api_v1_spotify_track__track_id__get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Track Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackDetailResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/audio-features/{track_id}": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Audio Features",
        "operationId": "get_audio_features_api_v1_spotify_audio_features__track_id__get",
        "parameters": [
          {
            "name": "track_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Track Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioFeaturesResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/audio-features": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Multiple Audio Features",
        "operationId": "get_multiple_audio_features_api_v1_spotify_audio_features_get",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioFeaturesResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/me/tracks": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Saved Tracks",
        "operationId": "get_saved_tracks_api_v1_spotify_me_tracks_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedTracksResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Spotify"
        ],
        "summary": "Save Tracks",
        "operationId": "save_tracks_api_v1_spotify_me_tracks_put",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackIdsPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Spotify"
        ],
        "summary": "Remove Saved Tracks",
        "operationId": "remove_saved_tracks_api_v1_spotify_me_tracks_delete",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackIdsPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/me": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Current User",
        "operationId": "get_current_user_api_v1_spotify_me_get",
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0.0
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/me/top/tracks": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Top Tracks",
        "operationId": "get_top_tracks_api_v1_spotify_me_top_tracks_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotifySearchResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/me/top/artists": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Top Artists",
        "operationId": "get_top_artists_api_v1_spotify_me_top_artists_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotifySearchResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/recommendations": {
      "get": {
        "tags": [
          "Spotify"
        ],
        "summary": "Get Recommendations",
        "operationId": "get_recommendations_api_v1_spotify_recommendations_get",
        "parameters": [
          {
            "name": "seed_tracks",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Seed Tracks"
            }
          },
          {
            "name": "seed_artists",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Seed Artists"
            }
          },
          {
            "name": "seed_genres",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Seed Genres"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationsResponse"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/backfill/run": {
      "post": {
        "tags": [
          "Spotify Backfill"
        ],
        "summary": "Run Backfill",
        "operationId": "run_backfill_api_v1_spotify_backfill_run_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackfillRunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackfillRunResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/backfill/jobs/{job_id}": {
      "get": {
        "tags": [
          "Spotify Backfill"
        ],
        "summary": "Get Backfill Job",
        "operationId": "get_backfill_job_api_v1_spotify_backfill_jobs__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackfillJobResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/import/free": {
      "post": {
        "tags": [
          "Spotify FREE Ingest"
        ],
        "summary": "Submit Free Ingest",
        "operationId": "submit_free_ingest_api_v1_spotify_import_free_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeIngestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/import/free/upload": {
      "post": {
        "tags": [
          "Spotify FREE Ingest"
        ],
        "summary": "Upload Free Ingest",
        "operationId": "upload_free_ingest_api_v1_spotify_import_free_upload_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/import/jobs/{job_id}": {
      "get": {
        "tags": [
          "Spotify FREE Ingest"
        ],
        "summary": "Get Free Ingest Job",
        "operationId": "get_free_ingest_job_api_v1_spotify_import_jobs__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/free/upload": {
      "post": {
        "tags": [
          "Spotify FREE"
        ],
        "summary": "Upload Import File",
        "operationId": "upload_import_file_api_v1_spotify_free_upload_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/free/parse": {
      "post": {
        "tags": [
          "Spotify FREE"
        ],
        "summary": "Parse Import Lines",
        "operationId": "parse_import_lines_api_v1_spotify_free_parse_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotify/free/enqueue": {
      "post": {
        "tags": [
          "Spotify FREE"
        ],
        "summary": "Enqueue Tracks",
        "operationId": "enqueue_tracks_api_v1_spotify_free_enqueue_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnqueueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnqueueResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/imports/free": {
      "post": {
        "tags": [
          "Imports",
          "Imports"
        ],
        "summary": "Create Free Import",
        "operationId": "create_free_import_api_v1_imports_free_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/status": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Status",
        "description": "Return connectivity status for the Soulseek daemon.",
        "operationId": "soulseek_status_api_v1_soulseek_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/search": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Search",
        "description": "Perform a Soulseek search and normalise the JSON response.",
        "operationId": "soulseek_search_api_v1_soulseek_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoulseekSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoulseekSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Download",
        "description": "Queue a Soulseek download job and persist queued entries.",
        "operationId": "soulseek_download_api_v1_soulseek_download_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoulseekDownloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoulseekDownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/lyrics": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Download Lyrics",
        "description": "Return the generated LRC lyrics for a completed download.",
        "operationId": "soulseek_download_lyrics_api_v1_soulseek_download__download_id__lyrics_get",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/lyrics/refresh": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Refresh Download Lyrics",
        "description": "Force a new lyrics lookup for the given download.",
        "operationId": "refresh_download_lyrics_api_v1_soulseek_download__download_id__lyrics_refresh_post",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/metadata": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Download Metadata",
        "description": "Return the stored metadata for a completed download.",
        "operationId": "soulseek_download_metadata_api_v1_soulseek_download__download_id__metadata_get",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadMetadataResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/metadata/refresh": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Refresh Download Metadata",
        "description": "Trigger a metadata refresh for the given download.",
        "operationId": "refresh_download_metadata_api_v1_soulseek_download__download_id__metadata_refresh_post",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/artwork": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Download Artwork",
        "description": "Return the stored artwork as an image file.",
        "operationId": "soulseek_download_artwork_api_v1_soulseek_download__download_id__artwork_get",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/artwork/refresh": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Refresh Artwork",
        "description": "Force an artwork refresh for a completed download.",
        "operationId": "soulseek_refresh_artwork_api_v1_soulseek_download__download_id__artwork_refresh_post",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/discography/download": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Discography Download",
        "description": "Persist and enqueue a complete discography download job.",
        "operationId": "soulseek_discography_download_api_v1_soulseek_discography_download_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscographyDownloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscographyJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/downloads": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Downloads",
        "description": "Return persisted download progress from the database.",
        "operationId": "soulseek_downloads_api_v1_soulseek_downloads_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoulseekDownloadStatus"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/downloads/{download_id}/requeue": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Requeue Download",
        "description": "Manually requeue a download unless it resides in the dead-letter queue.",
        "operationId": "soulseek_requeue_download_api_v1_soulseek_downloads__download_id__requeue_post",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}": {
      "delete": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Cancel",
        "description": "Cancel a Soulseek download by identifier.",
        "operationId": "soulseek_cancel_api_v1_soulseek_download__download_id__delete",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoulseekCancelResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Download Detail",
        "operationId": "soulseek_download_detail_api_v1_soulseek_download__download_id__get",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek Download Detail Api V1 Soulseek Download  Download Id  Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/downloads/all": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek All Downloads",
        "operationId": "soulseek_all_downloads_api_v1_soulseek_downloads_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Soulseek All Downloads Api V1 Soulseek Downloads All Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/downloads/completed": {
      "delete": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Remove Completed Downloads",
        "operationId": "soulseek_remove_completed_downloads_api_v1_soulseek_downloads_completed_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Soulseek Remove Completed Downloads Api V1 Soulseek Downloads Completed Delete"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/download/{download_id}/queue": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Download Queue",
        "operationId": "soulseek_download_queue_api_v1_soulseek_download__download_id__queue_get",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek Download Queue Api V1 Soulseek Download  Download Id  Queue Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/enqueue": {
      "post": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Enqueue",
        "operationId": "soulseek_enqueue_api_v1_soulseek_enqueue_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoulseekDownloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Soulseek Enqueue Api V1 Soulseek Enqueue Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/upload/{upload_id}": {
      "delete": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Cancel Upload",
        "operationId": "soulseek_cancel_upload_api_v1_soulseek_upload__upload_id__delete",
        "parameters": [
          {
            "name": "upload_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Upload Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek Cancel Upload Api V1 Soulseek Upload  Upload Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Upload Detail",
        "operationId": "soulseek_upload_detail_api_v1_soulseek_upload__upload_id__get",
        "parameters": [
          {
            "name": "upload_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Upload Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek Upload Detail Api V1 Soulseek Upload  Upload Id  Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/uploads": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Uploads",
        "operationId": "soulseek_uploads_api_v1_soulseek_uploads_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Soulseek Uploads Api V1 Soulseek Uploads Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/uploads/all": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek All Uploads",
        "operationId": "soulseek_all_uploads_api_v1_soulseek_uploads_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Soulseek All Uploads Api V1 Soulseek Uploads All Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/uploads/completed": {
      "delete": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek Remove Completed Uploads",
        "operationId": "soulseek_remove_completed_uploads_api_v1_soulseek_uploads_completed_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Soulseek Remove Completed Uploads Api V1 Soulseek Uploads Completed Delete"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/user/{username}/address": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek User Address",
        "operationId": "soulseek_user_address_api_v1_soulseek_user__username__address_get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek User Address Api V1 Soulseek User  Username  Address Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/user/{username}/browse": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek User Browse",
        "operationId": "soulseek_user_browse_api_v1_soulseek_user__username__browse_get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek User Browse Api V1 Soulseek User  Username  Browse Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/user/{username}/browsing_status": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek User Browsing Status",
        "operationId": "soulseek_user_browsing_status_api_v1_soulseek_user__username__browsing_status_get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek User Browsing Status Api V1 Soulseek User  Username  Browsing Status Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/user/{username}/directory": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek User Directory",
        "operationId": "soulseek_user_directory_api_v1_soulseek_user__username__directory_get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Directory path to browse",
              "title": "Path"
            },
            "description": "Directory path to browse"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek User Directory Api V1 Soulseek User  Username  Directory Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/user/{username}/info": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek User Info",
        "operationId": "soulseek_user_info_api_v1_soulseek_user__username__info_get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek User Info Api V1 Soulseek User  Username  Info Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/soulseek/user/{username}/status": {
      "get": {
        "tags": [
          "Soulseek"
        ],
        "summary": "Soulseek User Status",
        "operationId": "soulseek_user_status_api_v1_soulseek_user__username__status_get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Soulseek User Status Api V1 Soulseek User  Username  Status Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/matching/spotify-to-soulseek": {
      "post": {
        "tags": [
          "Matching"
        ],
        "summary": "Spotify To Soulseek",
        "description": "Match a Spotify track against Soulseek candidates and persist the result.",
        "operationId": "spotify_to_soulseek_api_v1_matching_spotify_to_soulseek_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get Settings",
        "operationId": "get_settings_api_v1_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Setting",
        "operationId": "update_setting_api_v1_settings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/history": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get Settings History",
        "operationId": "get_settings_history_api_v1_settings_history_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsHistoryResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/artist-preferences": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get Artist Preferences",
        "operationId": "get_artist_preferences_api_v1_settings_artist_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistPreferencesResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Save Artist Preferences",
        "operationId": "save_artist_preferences_api_v1_settings_artist_preferences_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistPreferencesPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistPreferencesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/metadata/update": {
      "post": {
        "tags": [
          "Metadata",
          "Metadata"
        ],
        "summary": "Start Metadata Update",
        "description": "Kick off a metadata update job.",
        "operationId": "start_metadata_update_api_v1_metadata_update_post",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Start Metadata Update Api V1 Metadata Update Post"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/metadata/status": {
      "get": {
        "tags": [
          "Metadata",
          "Metadata"
        ],
        "summary": "Get Metadata Status",
        "description": "Return the current metadata job status.",
        "operationId": "get_metadata_status_api_v1_metadata_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Metadata Status Api V1 Metadata Status Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/metadata/stop": {
      "post": {
        "tags": [
          "Metadata",
          "Metadata"
        ],
        "summary": "Stop Metadata Update",
        "description": "Request to stop the running metadata job.",
        "operationId": "stop_metadata_update_api_v1_metadata_stop_post",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Stop Metadata Update Api V1 Metadata Stop Post"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dlq": {
      "get": {
        "tags": [
          "DLQ",
          "DLQ"
        ],
        "summary": "List Dlq",
        "operationId": "list_dlq_api_v1_dlq_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 25,
              "title": "Page Size"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "created_at",
                "updated_at"
              ],
              "type": "string",
              "default": "created_at",
              "title": "Order By"
            }
          },
          {
            "name": "order_dir",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string",
              "default": "desc",
              "title": "Order Dir"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reason"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DLQResponseEnvelope"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dlq/requeue": {
      "post": {
        "tags": [
          "DLQ",
          "DLQ"
        ],
        "summary": "Requeue Dlq",
        "operationId": "requeue_dlq_api_v1_dlq_requeue_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DLQRequeueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DLQRequeueEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dlq/purge": {
      "post": {
        "tags": [
          "DLQ",
          "DLQ"
        ],
        "summary": "Purge Dlq",
        "operationId": "purge_dlq_api_v1_dlq_purge_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DLQPurgeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DLQPurgeEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dlq/stats": {
      "get": {
        "tags": [
          "DLQ",
          "DLQ"
        ],
        "summary": "Dlq Stats",
        "operationId": "dlq_stats_api_v1_dlq_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DLQStatsEnvelope"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sync": {
      "post": {
        "tags": [
          "Sync",
          "Sync"
        ],
        "summary": "Trigger Manual Sync",
        "description": "Run playlist and library synchronisation tasks on demand.",
        "operationId": "trigger_manual_sync_api_v1_sync_post",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Trigger Manual Sync Api V1 Sync Post"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get Health",
        "description": "Return liveness information without external I/O.",
        "operationId": "get_health_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Liveness status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "ok": true,
                  "data": {
                    "status": "up",
                    "version": "1.4.0",
                    "uptime_s": 1.23
                  },
                  "error": null
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ready": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get Readiness",
        "description": "Check database connectivity and configured dependencies.",
        "operationId": "get_readiness_api_v1_ready_get",
        "responses": {
          "200": {
            "description": "All dependencies ready",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadySuccessResponse"
                },
                "example": {
                  "ok": true,
                  "data": {
                    "db": "up",
                    "deps": {}
                  },
                  "error": null
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Dependencies unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "ok": false,
                  "error": {
                    "code": "DEPENDENCY_ERROR",
                    "message": "not ready",
                    "meta": {
                      "db": "down",
                      "deps": {
                        "spotify": "down"
                      }
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get Status",
        "description": "Return general application status data for the dashboard.",
        "operationId": "get_status_api_v1_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Status Api V1 Status Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/stats": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get System Stats",
        "description": "Return system statistics such as CPU, memory and disk usage.",
        "operationId": "get_system_stats_api_v1_system_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get System Stats Api V1 System Stats Get"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/downloads": {
      "get": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "List Downloads",
        "description": "Return downloads with optional status filtering.",
        "operationId": "list_downloads_api_v1_downloads_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "All"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadListResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download/{download_id}": {
      "get": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "Get Download",
        "description": "Return the persisted state of a single download.",
        "operationId": "get_download_api_v1_download__download_id__get",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadEntryResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "Cancel Download",
        "description": "Cancel a queued or running download.",
        "operationId": "cancel_download_api_v1_download__download_id__delete",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Cancel Download Api V1 Download  Download Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download/{download_id}/priority": {
      "patch": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "Update Download Priority",
        "description": "Update the priority of a persisted download.",
        "operationId": "update_download_priority_api_v1_download__download_id__priority_patch",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadPriorityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download": {
      "post": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "Start Download",
        "description": "Persist requested downloads and enqueue them for the SyncWorker.",
        "operationId": "start_download_api_v1_download_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoulseekDownloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Start Download Api V1 Download Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/downloads/export": {
      "get": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "Export Downloads",
        "description": "Export downloads as JSON or CSV without paging limits.",
        "operationId": "export_downloads_api_v1_downloads_export_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "json",
              "title": "Format"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/download/{download_id}/retry": {
      "post": {
        "tags": [
          "Download",
          "Download"
        ],
        "summary": "Retry Download",
        "description": "Retry a failed or cancelled download by creating a new entry.",
        "operationId": "retry_download_api_v1_download__download_id__retry_post",
        "parameters": [
          {
            "name": "download_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Download Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Retry Download Api V1 Download  Download Id  Retry Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activity": {
      "get": {
        "tags": [
          "Activity",
          "Activity"
        ],
        "summary": "List Activity",
        "description": "Return the most recent activity entries from persistent storage.",
        "operationId": "list_activity_api_v1_activity_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Activity Api V1 Activity Get"
                }
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activity/export": {
      "get": {
        "tags": [
          "Activity",
          "Activity"
        ],
        "summary": "Export Activity History",
        "description": "Export activity history entries either as JSON or CSV.",
        "operationId": "export_activity_history_api_v1_activity_export_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "json",
                "csv"
              ],
              "type": "string",
              "default": "json",
              "title": "Format"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with cache metadata. Subsequent cache hits may include an Age header.",
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Responses leverage conditional request caching via ETag and Last-Modified headers.",
            "headers": {
              "Cache-Control": {
                "description": "Cache directives for the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Strong or weak entity tag identifying the representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the most recent modification.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Vary": {
                "description": "Headers that influence cache variations, including Authorization, X-API-Key, Origin and Accept-Encoding.",
                "schema": {
                  "type": "string"
                }
              },
              "Age": {
                "description": "Approximate number of seconds the response has been cached.",
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations": {
      "get": {
        "tags": [
          "Integrations",
          "Integrations"
        ],
        "summary": "Get Integrations",
        "operationId": "get_integrations_api_v1_integrations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/spotify": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Spotify Health",
        "operationId": "spotify_health_api_v1_health_spotify_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceHealthResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/soulseek": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Soulseek Health",
        "operationId": "soulseek_health_api_v1_health_soulseek_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceHealthResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/watchlist": {
      "get": {
        "tags": [
          "Watchlist"
        ],
        "summary": "List Watchlist",
        "description": "Return all registered watchlist artists.",
        "operationId": "list_watchlist_api_v1_watchlist_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistListResponse"
                }
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified",
            "headers": {
              "ETag": {
                "description": "Entity tag identifying the cached representation.",
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "description": "Timestamp of the last modification in RFC 1123 format.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "Cache-Control": {
                "description": "Cache directives for clients and proxies.",
                "schema": {
                  "type": "string"
                }
              },
              "Vary": {
                "description": "Headers that affect the cached representation.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Add Watchlist Artist",
        "description": "Add a new artist to the automated release watchlist.",
        "operationId": "add_watchlist_artist_api_v1_watchlist_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchlistArtistCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistArtistEntry"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/watchlist/{artist_id}": {
      "delete": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Remove Watchlist Artist",
        "description": "Remove an artist from the release watchlist.",
        "operationId": "remove_watchlist_artist_api_v1_watchlist__artist_id__delete",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Smart Search",
        "description": "Aggregate search results from Spotify and Soulseek with ranking.",
        "operationId": "smart_search_api_v1_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "424": {
            "description": "Failed dependency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Bad gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArtistPreferenceEntry": {
        "properties": {
          "artist_id": {
            "type": "string",
            "title": "Artist Id"
          },
          "release_id": {
            "type": "string",
            "title": "Release Id"
          },
          "selected": {
            "type": "boolean",
            "title": "Selected"
          }
        },
        "type": "object",
        "required": [
          "artist_id",
          "release_id",
          "selected"
        ],
        "title": "ArtistPreferenceEntry"
      },
      "ArtistPreferencesPayload": {
        "properties": {
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/ArtistPreferenceEntry"
            },
            "type": "array",
            "title": "Preferences"
          }
        },
        "type": "object",
        "title": "ArtistPreferencesPayload"
      },
      "ArtistPreferencesResponse": {
        "properties": {
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/ArtistPreferenceEntry"
            },
            "type": "array",
            "title": "Preferences"
          }
        },
        "type": "object",
        "required": [
          "preferences"
        ],
        "title": "ArtistPreferencesResponse"
      },
      "ArtistReleasesResponse": {
        "properties": {
          "artist_id": {
            "type": "string",
            "title": "Artist Id"
          },
          "releases": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Releases"
          }
        },
        "type": "object",
        "required": [
          "artist_id",
          "releases"
        ],
        "title": "ArtistReleasesResponse"
      },
      "AudioFeaturesResponse": {
        "properties": {
          "audio_features": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              }
            ],
            "title": "Audio Features"
          }
        },
        "type": "object",
        "required": [
          "audio_features"
        ],
        "title": "AudioFeaturesResponse"
      },
      "BackfillJobCounts": {
        "properties": {
          "requested": {
            "type": "integer",
            "title": "Requested"
          },
          "processed": {
            "type": "integer",
            "title": "Processed"
          },
          "matched": {
            "type": "integer",
            "title": "Matched"
          },
          "cache_hits": {
            "type": "integer",
            "title": "Cache Hits"
          },
          "cache_misses": {
            "type": "integer",
            "title": "Cache Misses"
          },
          "expanded_playlists": {
            "type": "integer",
            "title": "Expanded Playlists"
          },
          "expanded_tracks": {
            "type": "integer",
            "title": "Expanded Tracks"
          }
        },
        "type": "object",
        "required": [
          "requested",
          "processed",
          "matched",
          "cache_hits",
          "cache_misses",
          "expanded_playlists",
          "expanded_tracks"
        ],
        "title": "BackfillJobCounts"
      },
      "BackfillJobResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "counts": {
            "$ref": "#/components/schemas/BackfillJobCounts"
          },
          "expand_playlists": {
            "type": "boolean",
            "title": "Expand Playlists"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "job_id",
          "state",
          "counts",
          "expand_playlists"
        ],
        "title": "BackfillJobResponse"
      },
      "BackfillRunRequest": {
        "properties": {
          "max_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Items"
          },
          "expand_playlists": {
            "type": "boolean",
            "title": "Expand Playlists",
            "default": true
          }
        },
        "type": "object",
        "title": "BackfillRunRequest"
      },
      "BackfillRunResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "job_id"
        ],
        "title": "BackfillRunResponse"
      },
      "DLQItemPayload": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "entity": {
            "type": "string",
            "const": "download",
            "title": "Entity"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "entity",
          "reason",
          "created_at",
          "updated_at",
          "retry_count"
        ],
        "title": "DLQItemPayload"
      },
      "DLQListData": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DLQItemPayload"
            },
            "type": "array",
            "title": "Items"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "page_size",
          "total"
        ],
        "title": "DLQListData"
      },
      "DLQPurgeData": {
        "properties": {
          "purged": {
            "type": "integer",
            "title": "Purged"
          }
        },
        "type": "object",
        "required": [
          "purged"
        ],
        "title": "DLQPurgeData"
      },
      "DLQPurgeEnvelope": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "data": {
            "$ref": "#/components/schemas/DLQPurgeData"
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "data"
        ],
        "title": "DLQPurgeEnvelope"
      },
      "DLQPurgeRequest": {
        "properties": {
          "ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ids"
          },
          "older_than": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Older Than"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "DLQPurgeRequest"
      },
      "DLQRequeueData": {
        "properties": {
          "requeued": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Requeued"
          },
          "skipped": {
            "items": {
              "$ref": "#/components/schemas/DLQSkippedEntry"
            },
            "type": "array",
            "title": "Skipped"
          }
        },
        "type": "object",
        "required": [
          "requeued",
          "skipped"
        ],
        "title": "DLQRequeueData"
      },
      "DLQRequeueEnvelope": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "data": {
            "$ref": "#/components/schemas/DLQRequeueData"
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "data"
        ],
        "title": "DLQRequeueEnvelope"
      },
      "DLQRequeueRequest": {
        "properties": {
          "ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "DLQRequeueRequest"
      },
      "DLQResponseEnvelope": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "data": {
            "$ref": "#/components/schemas/DLQListData"
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "data"
        ],
        "title": "DLQResponseEnvelope"
      },
      "DLQSkippedEntry": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "reason"
        ],
        "title": "DLQSkippedEntry"
      },
      "DLQStatsData": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "by_reason": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Reason"
          },
          "last_24h": {
            "type": "integer",
            "title": "Last 24H"
          }
        },
        "type": "object",
        "required": [
          "total",
          "by_reason",
          "last_24h"
        ],
        "title": "DLQStatsData"
      },
      "DLQStatsEnvelope": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "data": {
            "$ref": "#/components/schemas/DLQStatsData"
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "data"
        ],
        "title": "DLQStatsEnvelope"
      },
      "DiscographyAlbum": {
        "properties": {
          "album": {
            "additionalProperties": true,
            "type": "object",
            "title": "Album"
          },
          "tracks": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Tracks"
          }
        },
        "type": "object",
        "required": [
          "album"
        ],
        "title": "DiscographyAlbum"
      },
      "DiscographyDownloadRequest": {
        "properties": {
          "artist_id": {
            "type": "string",
            "title": "Artist Id"
          },
          "artist_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artist Name"
          }
        },
        "type": "object",
        "required": [
          "artist_id"
        ],
        "title": "DiscographyDownloadRequest"
      },
      "DiscographyJobResponse": {
        "properties": {
          "job_id": {
            "type": "integer",
            "title": "Job Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "status"
        ],
        "title": "DiscographyJobResponse"
      },
      "DiscographyResponse": {
        "properties": {
          "artist_id": {
            "type": "string",
            "title": "Artist Id"
          },
          "albums": {
            "items": {
              "$ref": "#/components/schemas/DiscographyAlbum"
            },
            "type": "array",
            "title": "Albums"
          }
        },
        "type": "object",
        "required": [
          "artist_id"
        ],
        "title": "DiscographyResponse"
      },
      "DownloadEntryResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "organized_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organized Path"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "composer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Composer"
          },
          "producer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Producer"
          },
          "isrc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isrc"
          },
          "copyright": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copyright"
          },
          "artwork_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artwork Url"
          },
          "artwork_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artwork Path"
          },
          "artwork_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artwork Status"
          },
          "has_artwork": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Artwork"
          },
          "spotify_track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spotify Track Id"
          },
          "spotify_album_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spotify Album Id"
          },
          "lyrics_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lyrics Status"
          },
          "lyrics_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lyrics Path"
          },
          "has_lyrics": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Lyrics"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "default": 0
          },
          "next_retry_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Retry At"
          },
          "last_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error"
          },
          "state": {
            "type": "string",
            "title": "State",
            "description": "Expose canonical download state names.",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Provide backwards compatible ``status`` attribute.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "progress",
          "created_at",
          "updated_at",
          "state",
          "status"
        ],
        "title": "DownloadEntryResponse",
        "description": "Download information returned to API consumers."
      },
      "DownloadFileRequest": {
        "properties": {
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename",
            "description": "Resolved filename that should be stored for the download"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Original filename reported by the client (fallback field)"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Explicit priority override for this download"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Origin of the download request, e.g. spotify_saved"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "DownloadFileRequest",
        "description": "Input payload for an individual download request."
      },
      "DownloadListResponse": {
        "properties": {
          "downloads": {
            "items": {
              "$ref": "#/components/schemas/DownloadEntryResponse"
            },
            "type": "array",
            "title": "Downloads"
          }
        },
        "type": "object",
        "required": [
          "downloads"
        ],
        "title": "DownloadListResponse"
      },
      "DownloadMetadataResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "composer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Composer"
          },
          "producer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Producer"
          },
          "isrc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isrc"
          },
          "copyright": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copyright"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename"
        ],
        "title": "DownloadMetadataResponse"
      },
      "DownloadPriorityUpdate": {
        "properties": {
          "priority": {
            "type": "integer",
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "priority"
        ],
        "title": "DownloadPriorityUpdate"
      },
      "EnqueueRequest": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NormalizedTrack"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "EnqueueRequest"
      },
      "EnqueueResponse": {
        "properties": {
          "queued": {
            "type": "integer",
            "title": "Queued"
          },
          "skipped": {
            "type": "integer",
            "title": "Skipped"
          }
        },
        "type": "object",
        "required": [
          "queued",
          "skipped"
        ],
        "title": "EnqueueResponse"
      },
      "FollowedArtistsResponse": {
        "properties": {
          "artists": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Artists"
          }
        },
        "type": "object",
        "required": [
          "artists"
        ],
        "title": "FollowedArtistsResponse"
      },
      "FreeIngestRequest": {
        "properties": {
          "playlist_links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Playlist Links"
          },
          "tracks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tracks"
          },
          "batch_hint": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Batch Hint"
          }
        },
        "type": "object",
        "title": "FreeIngestRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntegrationsData": {
        "properties": {
          "overall": {
            "type": "string",
            "title": "Overall"
          },
          "providers": {
            "items": {
              "$ref": "#/components/schemas/ProviderInfo"
            },
            "type": "array",
            "title": "Providers"
          }
        },
        "type": "object",
        "required": [
          "overall",
          "providers"
        ],
        "title": "IntegrationsData"
      },
      "IntegrationsResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IntegrationsData"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok"
        ],
        "title": "IntegrationsResponse"
      },
      "JobCountsModel": {
        "properties": {
          "registered": {
            "type": "integer",
            "title": "Registered"
          },
          "normalized": {
            "type": "integer",
            "title": "Normalized"
          },
          "queued": {
            "type": "integer",
            "title": "Queued"
          },
          "completed": {
            "type": "integer",
            "title": "Completed"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          }
        },
        "type": "object",
        "required": [
          "registered",
          "normalized",
          "queued",
          "completed",
          "failed"
        ],
        "title": "JobCountsModel"
      },
      "JobResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "job": {
            "$ref": "#/components/schemas/JobStatusModel"
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "job"
        ],
        "title": "JobResponse"
      },
      "JobStatusModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "counts": {
            "$ref": "#/components/schemas/JobCountsModel"
          },
          "accepted": {
            "$ref": "#/components/schemas/SubmissionAccepted"
          },
          "skipped": {
            "$ref": "#/components/schemas/SubmissionSkipped"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "queued_tracks": {
            "type": "integer",
            "title": "Queued Tracks",
            "default": 0
          },
          "failed_tracks": {
            "type": "integer",
            "title": "Failed Tracks",
            "default": 0
          },
          "skipped_tracks": {
            "type": "integer",
            "title": "Skipped Tracks",
            "default": 0
          },
          "skip_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Reason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "state",
          "counts",
          "accepted",
          "skipped"
        ],
        "title": "JobStatusModel"
      },
      "MatchingRequest": {
        "properties": {
          "spotify_track": {
            "additionalProperties": true,
            "type": "object",
            "title": "Spotify Track"
          },
          "candidates": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Candidates"
          }
        },
        "type": "object",
        "required": [
          "spotify_track",
          "candidates"
        ],
        "title": "MatchingRequest"
      },
      "MatchingResponse": {
        "properties": {
          "best_match": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Best Match"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "best_match",
          "confidence"
        ],
        "title": "MatchingResponse"
      },
      "NormalizedTrack": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source",
            "default": "user"
          },
          "kind": {
            "type": "string",
            "title": "Kind",
            "default": "track"
          },
          "artist": {
            "type": "string",
            "title": "Artist"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "album": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Album"
          },
          "release_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Release Year"
          },
          "spotify_track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spotify Track Id"
          },
          "spotify_album_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spotify Album Id"
          },
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "artist",
          "title",
          "query"
        ],
        "title": "NormalizedTrack"
      },
      "ParseRequest": {
        "properties": {
          "lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Lines"
          },
          "file_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Token"
          }
        },
        "type": "object",
        "title": "ParseRequest"
      },
      "ParseResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NormalizedTrack"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ParseResponse"
      },
      "PlaylistEntry": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "track_count": {
            "type": "integer",
            "title": "Track Count"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "track_count",
          "updated_at"
        ],
        "title": "PlaylistEntry"
      },
      "PlaylistItemsResponse": {
        "properties": {
          "items": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "PlaylistItemsResponse"
      },
      "PlaylistReorderPayload": {
        "properties": {
          "range_start": {
            "type": "integer",
            "title": "Range Start"
          },
          "insert_before": {
            "type": "integer",
            "title": "Insert Before"
          }
        },
        "type": "object",
        "required": [
          "range_start",
          "insert_before"
        ],
        "title": "PlaylistReorderPayload"
      },
      "PlaylistResponse": {
        "properties": {
          "playlists": {
            "items": {
              "$ref": "#/components/schemas/PlaylistEntry"
            },
            "type": "array",
            "title": "Playlists"
          }
        },
        "type": "object",
        "required": [
          "playlists"
        ],
        "title": "PlaylistResponse"
      },
      "PlaylistTracksPayload": {
        "properties": {
          "uris": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Uris"
          }
        },
        "type": "object",
        "required": [
          "uris"
        ],
        "title": "PlaylistTracksPayload"
      },
      "ProviderInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status"
        ],
        "title": "ProviderInfo"
      },
      "RecommendationsResponse": {
        "properties": {
          "tracks": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Tracks"
          },
          "seeds": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Seeds"
          }
        },
        "type": "object",
        "required": [
          "tracks",
          "seeds"
        ],
        "title": "RecommendationsResponse"
      },
      "SavedTracksResponse": {
        "properties": {
          "items": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total"
        ],
        "title": "SavedTracksResponse"
      },
      "SearchItem": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "track",
              "album",
              "artist"
            ],
            "title": "Type"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "source": {
            "type": "string",
            "enum": [
              "spotify",
              "soulseek"
            ],
            "title": "Source"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "artist": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artist"
          },
          "album": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Album"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          },
          "genres": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Genres"
          },
          "bitrate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitrate"
          },
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Score",
            "default": 0.0
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "type",
          "id",
          "source",
          "title"
        ],
        "title": "SearchItem",
        "description": "Normalised search result entry."
      },
      "SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Free-text search query"
          },
          "type": {
            "type": "string",
            "enum": [
              "track",
              "album",
              "artist",
              "mixed"
            ],
            "title": "Type",
            "description": "Result type filter (artist/album/track/mixed)",
            "default": "mixed"
          },
          "sources": {
            "items": {
              "type": "string",
              "enum": [
                "spotify",
                "soulseek"
              ]
            },
            "type": "array",
            "title": "Sources",
            "description": "Sources to query"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre",
            "description": "Optional genre filter (case-insensitive, diacritic agnostic)"
          },
          "year_from": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2099.0,
                "minimum": 1900.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Year From",
            "description": "Lower bound of the release year (inclusive)"
          },
          "year_to": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2099.0,
                "minimum": 1900.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Year To",
            "description": "Upper bound of the release year (inclusive)"
          },
          "min_bitrate": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Bitrate",
            "description": "Minimum acceptable bitrate in kbps"
          },
          "format_priority": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format Priority",
            "description": "Preferred audio formats used for secondary sorting"
          },
          "limit": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum number of items to return",
            "default": 25
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Offset for pagination",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchRequest",
        "description": "Schema describing the smart search payload."
      },
      "SearchResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok",
            "default": true
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SearchItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "total",
          "limit",
          "offset",
          "items"
        ],
        "title": "SearchResponse",
        "description": "Envelope returned by the smart search endpoint."
      },
      "ServiceHealthResponse": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service"
          },
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "fail",
              "disabled"
            ],
            "title": "Status"
          },
          "missing": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Missing"
          },
          "optional_missing": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Optional Missing"
          }
        },
        "type": "object",
        "required": [
          "service",
          "status"
        ],
        "title": "ServiceHealthResponse"
      },
      "SettingsHistoryEntry": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Value"
          },
          "changed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Changed At"
          }
        },
        "type": "object",
        "required": [
          "key",
          "old_value",
          "new_value",
          "changed_at"
        ],
        "title": "SettingsHistoryEntry"
      },
      "SettingsHistoryResponse": {
        "properties": {
          "history": {
            "items": {
              "$ref": "#/components/schemas/SettingsHistoryEntry"
            },
            "type": "array",
            "title": "History"
          }
        },
        "type": "object",
        "required": [
          "history"
        ],
        "title": "SettingsHistoryResponse"
      },
      "SettingsPayload": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "SettingsPayload"
      },
      "SettingsResponse": {
        "properties": {
          "settings": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Settings"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "settings",
          "updated_at"
        ],
        "title": "SettingsResponse"
      },
      "SoulseekCancelResponse": {
        "properties": {
          "cancelled": {
            "type": "boolean",
            "title": "Cancelled"
          }
        },
        "type": "object",
        "required": [
          "cancelled"
        ],
        "title": "SoulseekCancelResponse"
      },
      "SoulseekDownloadEntry": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "organized_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organized Path"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "composer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Composer"
          },
          "producer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Producer"
          },
          "isrc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isrc"
          },
          "copyright": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copyright"
          },
          "artwork_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artwork Url"
          },
          "artwork_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artwork Path"
          },
          "artwork_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artwork Status"
          },
          "has_artwork": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Artwork"
          },
          "spotify_track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spotify Track Id"
          },
          "spotify_album_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spotify Album Id"
          },
          "lyrics_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lyrics Status"
          },
          "lyrics_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lyrics Path"
          },
          "has_lyrics": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Lyrics"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "default": 0
          },
          "next_retry_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Retry At"
          },
          "last_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error"
          },
          "state": {
            "type": "string",
            "title": "State",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "progress",
          "created_at",
          "updated_at",
          "state"
        ],
        "title": "SoulseekDownloadEntry"
      },
      "SoulseekDownloadRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Soulseek username hosting the files"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/DownloadFileRequest"
            },
            "type": "array",
            "title": "Files",
            "description": "List of files to download"
          }
        },
        "type": "object",
        "required": [
          "username",
          "files"
        ],
        "title": "SoulseekDownloadRequest"
      },
      "SoulseekDownloadResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "detail": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "SoulseekDownloadResponse",
        "description": "Response payload when a Soulseek download is queued."
      },
      "SoulseekDownloadStatus": {
        "properties": {
          "downloads": {
            "items": {
              "$ref": "#/components/schemas/SoulseekDownloadEntry"
            },
            "type": "array",
            "title": "Downloads"
          }
        },
        "type": "object",
        "required": [
          "downloads"
        ],
        "title": "SoulseekDownloadStatus"
      },
      "SoulseekSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SoulseekSearchRequest"
      },
      "SoulseekSearchResponse": {
        "properties": {
          "results": {
            "items": {},
            "type": "array",
            "title": "Results"
          },
          "raw": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "SoulseekSearchResponse",
        "description": "Response payload for Soulseek search results."
      },
      "SpotifyModePayload": {
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "FREE",
              "PRO"
            ],
            "title": "Mode"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ],
        "title": "SpotifyModePayload"
      },
      "SpotifyModeResponse": {
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "FREE",
              "PRO"
            ],
            "title": "Mode"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ],
        "title": "SpotifyModeResponse"
      },
      "SpotifySearchResponse": {
        "properties": {
          "items": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "SpotifySearchResponse"
      },
      "StatusResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "artist_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artist Count"
          },
          "album_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Album Count"
          },
          "track_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Count"
          },
          "last_scan": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Scan"
          },
          "connections": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connections"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "StatusResponse"
      },
      "SubmissionAccepted": {
        "properties": {
          "playlists": {
            "type": "integer",
            "title": "Playlists"
          },
          "tracks": {
            "type": "integer",
            "title": "Tracks"
          },
          "batches": {
            "type": "integer",
            "title": "Batches"
          }
        },
        "type": "object",
        "required": [
          "playlists",
          "tracks",
          "batches"
        ],
        "title": "SubmissionAccepted"
      },
      "SubmissionResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id"
          },
          "accepted": {
            "$ref": "#/components/schemas/SubmissionAccepted"
          },
          "skipped": {
            "$ref": "#/components/schemas/SubmissionSkipped"
          },
          "error": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "job_id",
          "accepted",
          "skipped"
        ],
        "title": "SubmissionResponse"
      },
      "SubmissionSkipped": {
        "properties": {
          "playlists": {
            "type": "integer",
            "title": "Playlists"
          },
          "tracks": {
            "type": "integer",
            "title": "Tracks"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "playlists",
          "tracks"
        ],
        "title": "SubmissionSkipped"
      },
      "TrackDetailResponse": {
        "properties": {
          "track": {
            "additionalProperties": true,
            "type": "object",
            "title": "Track"
          }
        },
        "type": "object",
        "required": [
          "track"
        ],
        "title": "TrackDetailResponse"
      },
      "TrackIdsPayload": {
        "properties": {
          "ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "TrackIdsPayload"
      },
      "UploadPayload": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "content"
        ],
        "title": "UploadPayload"
      },
      "UploadResponse": {
        "properties": {
          "file_token": {
            "type": "string",
            "title": "File Token"
          }
        },
        "type": "object",
        "required": [
          "file_token"
        ],
        "title": "UploadResponse"
      },
      "UserProfileResponse": {
        "properties": {
          "profile": {
            "additionalProperties": true,
            "type": "object",
            "title": "Profile"
          }
        },
        "type": "object",
        "required": [
          "profile"
        ],
        "title": "UserProfileResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WatchlistArtistCreate": {
        "properties": {
          "spotify_artist_id": {
            "type": "string",
            "title": "Spotify Artist Id",
            "description": "Spotify artist identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Display name for the artist"
          }
        },
        "type": "object",
        "required": [
          "spotify_artist_id",
          "name"
        ],
        "title": "WatchlistArtistCreate"
      },
      "WatchlistArtistEntry": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "spotify_artist_id": {
            "type": "string",
            "title": "Spotify Artist Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_checked": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Checked"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "spotify_artist_id",
          "name",
          "created_at"
        ],
        "title": "WatchlistArtistEntry"
      },
      "WatchlistListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WatchlistArtistEntry"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "WatchlistListResponse"
      },
      "ErrorObject": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "VALIDATION_ERROR",
              "NOT_FOUND",
              "RATE_LIMITED",
              "DEPENDENCY_ERROR",
              "INTERNAL_ERROR"
            ]
          },
          "message": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "ok",
          "error"
        ],
        "properties": {
          "ok": {
            "type": "boolean",
            "const": false
          },
          "error": {
            "$ref": "#/components/schemas/ErrorObject"
          }
        }
      },
      "HealthData": {
        "type": "object",
        "required": [
          "status",
          "version",
          "uptime_s"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "up"
            ]
          },
          "version": {
            "type": "string"
          },
          "uptime_s": {
            "type": "number"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "ok",
          "data",
          "error"
        ],
        "properties": {
          "ok": {
            "type": "boolean",
            "const": true
          },
          "data": {
            "$ref": "#/components/schemas/HealthData"
          },
          "error": {
            "type": "null"
          }
        }
      },
      "ReadyData": {
        "type": "object",
        "required": [
          "db",
          "deps"
        ],
        "properties": {
          "db": {
            "type": "string"
          },
          "deps": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ReadySuccessResponse": {
        "type": "object",
        "required": [
          "ok",
          "data",
          "error"
        ],
        "properties": {
          "ok": {
            "type": "boolean",
            "const": true
          },
          "data": {
            "$ref": "#/components/schemas/ReadyData"
          },
          "error": {
            "type": "null"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "Provide the configured API key via the X-API-Key header. Authorization: Bearer is also supported."
      }
    }
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "security": []
}
